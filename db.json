{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/img/404.jpg","path":"img/404.jpg","modified":1,"renderable":0},{"_id":"source/uploads/avatar.png","path":"uploads/avatar.png","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/404.html","hash":"59d43394672e92caefb5f33b98c339a48c9e5136","modified":1529390429819},{"_id":"source/CNAME","hash":"038c6e63b1bf3ce0242131d240226fb297ad97d3","modified":1529390429820},{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1529391258130},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1529391258131},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1529391258133},{"_id":"themes/next/.gitignore","hash":"ee0b13c268cc8695d3883a5da84930af02d4ed08","modified":1529391258142},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1529391258143},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1529391258145},{"_id":"themes/next/.javascript_ignore","hash":"cd250ad74ca22bd2c054476456a73d9687f05f87","modified":1529391258144},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1529391258146},{"_id":"themes/next/.travis.yml","hash":"6674fbdfe0d0c03b8a04527ffb8ab66a94253acd","modified":1529391258147},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1529391258149},{"_id":"themes/next/README.cn.md","hash":"23e92a2599725db2f8dbd524fbef2087c6d11c7b","modified":1529391258150},{"_id":"themes/next/README.md","hash":"50abff86ffe4113051a409c1ed9261195d2aead0","modified":1529391258152},{"_id":"themes/next/_config.yml","hash":"a9b9f5ec72df9917961384a59bf8f042361ccc75","modified":1529393067339},{"_id":"themes/next/bower.json","hash":"486ebd72068848c97def75f36b71cbec9bb359c5","modified":1529391258155},{"_id":"themes/next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1529391258157},{"_id":"themes/next/package.json","hash":"3963ad558a24c78a3fd4ef23cf5f73f421854627","modified":1529391258293},{"_id":"source/_posts/howToUseApplyCallBind.md","hash":"2efaf4cbadc4906963e31fce96328502c35fc774","modified":1529395915086},{"_id":"source/_posts/js判断浏览器类型.md","hash":"2674f6597d180dead419c36d63f52e64984cbd19","modified":1561451474088},{"_id":"source/_posts/prototype、constructor以及-proto-的关系.md","hash":"7689253b736ba14fe72cb8ca753fe93c97c56eec","modified":1550631711240},{"_id":"source/_posts/数组和字符串对象方法总结.md","hash":"6d61ab502b81b3ccb81921e18b4f003765a3aabc","modified":1529396041485},{"_id":"source/categories/index.md","hash":"414e4eecfe86b8c1cd5a58e4a9ce69a0d9dfed55","modified":1529390429831},{"_id":"source/img/404.jpg","hash":"58c127c7ec06b36637146988dbc72490de77b835","modified":1529390429834},{"_id":"source/uploads/avatar.png","hash":"b7fe776e0aaeb8dd63912b9adba53d6d2513186d","modified":1529390429837},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1529391258101},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1529391247111},{"_id":"themes/next/.git/config","hash":"8e94cc015a498d35202e9fd57e44b3c51e1e5634","modified":1529391258118},{"_id":"themes/next/.git/index","hash":"414c123c3adf1ee993ec7707fc56afc7d9965864","modified":1529391713067},{"_id":"themes/next/.git/packed-refs","hash":"8e36811256ee380c2c65692f1b8f8e77c5bc33c9","modified":1529391258088},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5adfad3ef1b870063e621bc0838268eb2c7c697a","modified":1529391258136},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"a0a82dbfabdef9a9d7c17a08ceebfb4052d98d81","modified":1529391258138},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1228506a940114288d61812bfe60c045a0abeac1","modified":1529391258139},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1529391258141},{"_id":"themes/next/languages/de.yml","hash":"fd02d9c2035798d5dc7c1a96b4c3e24b05b31a47","modified":1529391258158},{"_id":"themes/next/languages/en.yml","hash":"2f4b4776ca1a08cc266a19afb0d1350a3926f42c","modified":1529391258161},{"_id":"themes/next/languages/default.yml","hash":"b3bcd8934327448a43d9bfada5dd11b1b8c1402e","modified":1529391258160},{"_id":"themes/next/languages/fr-FR.yml","hash":"efeeb55d5c4add54ad59a612fc0630ee1300388c","modified":1529391258162},{"_id":"themes/next/languages/id.yml","hash":"dccae33e2a5b3c9f11c0e05ec4a7201af1b25745","modified":1529391258164},{"_id":"themes/next/languages/it.yml","hash":"a215d016146b1bd92cef046042081cbe0c7f976f","modified":1529391258166},{"_id":"themes/next/languages/ja.yml","hash":"37f954e47a3bc669620ca559e3edb3b0072a4be5","modified":1529391258168},{"_id":"themes/next/languages/ko.yml","hash":"dc8f3e8c64eb7c4bb2385025b3006b8efec8b31d","modified":1529391258169},{"_id":"themes/next/languages/nl-NL.yml","hash":"213e7a002b82fb265f69dabafbbc382cfd460030","modified":1529391258170},{"_id":"themes/next/languages/pt-BR.yml","hash":"568d494a1f37726a5375b11452a45c71c3e2852d","modified":1529391258171},{"_id":"themes/next/languages/pt.yml","hash":"2efcd240c66ab1a122f061505ca0fb1e8819877b","modified":1529391258173},{"_id":"themes/next/languages/ru.yml","hash":"e33ee44e80f82e329900fc41eb0bb6823397a4d6","modified":1529391258174},{"_id":"themes/next/languages/vi.yml","hash":"a9b89ebd3e5933033d1386c7c56b66c44aca299a","modified":1529391258175},{"_id":"themes/next/languages/zh-hk.yml","hash":"fe0d45807d015082049f05b54714988c244888da","modified":1529391258178},{"_id":"themes/next/languages/zh-Hans.yml","hash":"66b9b42f143c3cb2f782a94abd4c4cbd5fd7f55f","modified":1529391258177},{"_id":"themes/next/languages/zh-tw.yml","hash":"432463b481e105073accda16c3e590e54c8e7b74","modified":1529391258180},{"_id":"themes/next/layout/_layout.swig","hash":"2164570bb05db11ee4bcfbbb5d183a759afe9d07","modified":1529391258186},{"_id":"themes/next/layout/archive.swig","hash":"9a2c14874a75c7085d2bada5e39201d3fc4fd2b4","modified":1529391258283},{"_id":"themes/next/layout/category.swig","hash":"3cbb3f72429647411f9e85f2544bdf0e3ad2e6b2","modified":1529391258284},{"_id":"themes/next/layout/index.swig","hash":"555a357ecf17128db4e29346c92bb6298e66547a","modified":1529391258286},{"_id":"themes/next/layout/page.swig","hash":"e8fcaa641d46930237675d2ad4b56964d9e262e9","modified":1529391258287},{"_id":"themes/next/layout/schedule.swig","hash":"87ad6055df01fa2e63e51887d34a2d8f0fbd2f5a","modified":1529391258290},{"_id":"themes/next/layout/post.swig","hash":"7a6ce102ca82c3a80f776e555dddae1a9981e1ed","modified":1529391258289},{"_id":"themes/next/layout/tag.swig","hash":"34e1c016cbdf94a31f9c5d494854ff46b2a182e9","modified":1529391258292},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1529391258297},{"_id":"themes/next/scripts/merge-configs.js","hash":"38d86aab4fc12fb741ae52099be475196b9db972","modified":1529391258296},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1529391258718},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1529391258719},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1529391258721},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1529391258488},{"_id":"source/_posts/howToUseApplyCallBind/bind_support.png","hash":"c5149bfea81c05a6b6b6131e9e6dd08fb5cea3f5","modified":1558506624765},{"_id":"source/_posts/数组和字符串对象方法总结/4.jpg","hash":"58c127c7ec06b36637146988dbc72490de77b835","modified":1529390429830},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1529391247112},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1529391247116},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1529391247113},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1529391247117},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1529391247118},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1529391247119},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"18be3eb275c1decd3614e139f5a311b75f1b0ab8","modified":1529391247121},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1529391247122},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1529391247124},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1529391247125},{"_id":"themes/next/.git/logs/HEAD","hash":"731f1cff409956b349ea0a33b3f3b5b2fd9f3bc4","modified":1529391258108},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1529391247127},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1529391258183},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1529391258184},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"8c56dd26157cbc580ae41d97ac34b90ab48ced3f","modified":1529391258188},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"f83befdc740beb8dc88805efd7fbb0fef9ed19be","modified":1529391258188},{"_id":"themes/next/layout/_macro/post.swig","hash":"4ba938822d56c597490f0731893eaa2443942e0f","modified":1529391258190},{"_id":"themes/next/layout/_macro/reward.swig","hash":"357d86ec9586705bfbb2c40a8c7d247a407db21a","modified":1529391258192},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"e2e4eae391476da994045ed4c7faf5e05aca2cd7","modified":1529391258194},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"9c7343fd470e0943ebd75f227a083a980816290b","modified":1529391258193},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4adc65a602d1276615da3b887dcbf2ac68e7382b","modified":1529391258196},{"_id":"themes/next/layout/_partials/footer.swig","hash":"26e93336dc57a39590ba8dc80564a1d2ad5ff93b","modified":1529391258197},{"_id":"themes/next/layout/_partials/head.swig","hash":"f14a39dad1ddd98e6d3ceb25dda092ba80d391b5","modified":1529391258198},{"_id":"themes/next/layout/_partials/header.swig","hash":"c54b32263bc8d75918688fb21f795103b3f57f03","modified":1529391258203},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1529391258204},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1529391258205},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1529391258206},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1529391258260},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1529391258261},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1529391258262},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"fa882641da3bd83d9a58a8a97f9d4c62a9ee7b5c","modified":1529391258264},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1529391258265},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1529391258267},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1529391258268},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1529391258217},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1529391258218},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9be624634703be496a5d2535228bc568a8373af9","modified":1529391258228},{"_id":"themes/next/scripts/tags/button.js","hash":"eddbb612c15ac27faf11c59c019ce188f33dec2c","modified":1529391258300},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1529391258301},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1529391258303},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1529391258304},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1529391258306},{"_id":"themes/next/scripts/tags/label.js","hash":"6f00952d70aadece844ce7fd27adc52816cc7374","modified":1529391258308},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"bcba2ff25cd7850ce6da322d8bd85a8dd00b5ceb","modified":1529391258309},{"_id":"themes/next/scripts/tags/note.js","hash":"f7eae135f35cdab23728e9d0d88b76e00715faa0","modified":1529391258311},{"_id":"themes/next/scripts/tags/tabs.js","hash":"aa7fc94a5ec27737458d9fe1a75c0db7593352fd","modified":1529391258312},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1529391258487},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1529391258491},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1529391258493},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1529391258494},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1529391258496},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1529391258498},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1529391258500},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1529391258501},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1529391258503},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1529391258506},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1529391258507},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1529391258504},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1529391258509},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1529391258510},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1529391258512},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1529391258513},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1529391258515},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1529391258516},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1529391258518},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1529391258223},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1529391258223},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1529391258425},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1529391258426},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1529391258431},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1529391258479},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1529391258484},{"_id":"themes/next/.git/refs/heads/master","hash":"7999da428ebb87e5a2b27315d8d5123c1ccdfaa5","modified":1529391258106},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1529391258200},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1529391258201},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1529391258207},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1529391258208},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1529391258210},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1529391258211},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1529391258211},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1529391258212},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"0a9cdd6958395fcdffc80ab60f0c6301b63664a5","modified":1529391258214},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"ff947f3561b229bc528cb1837d4ca19612219411","modified":1529391258230},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1529391258231},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1529391258232},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"7b11eac3a0685fa1ab2ab6ecff60afc4f15f0d16","modified":1529391258234},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1529391258235},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"7d94845f96197d9d84a405fa5d4ede75fb81b225","modified":1529391258236},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"ccc443b22bd4f8c7ac4145664686c756395b90e0","modified":1529391258237},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1529391258239},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e6d10ee4fb70b3ae1cd37e9e36e000306734aa2e","modified":1529391258241},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"45f3f629c2aacc381095750e1c8649041a71a84b","modified":1529391258240},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1529391258242},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1529391258243},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1529391258245},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1529391258247},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1529391258251},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1529391258249},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"4dcc3213c033994d342d02b800b6229295433d30","modified":1529391258253},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1529391258254},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"493bd5999a1061b981922be92d8277a0f9152447","modified":1529391258256},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"9246162d4bc7e949ce1d12d135cbbaf5dc3024ec","modified":1529391258256},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"4050553d44ba1396174161c9a6bb0f89fa779eca","modified":1529391258257},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"7e65ff8fe586cd655b0e9d1ad2912663ff9bd36c","modified":1529391258258},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"93479642fd076a1257fecc25fcf5d20ccdefe509","modified":1529391258277},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1529391258276},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1529391258279},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1529391258281},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1529391258220},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1529391258223},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1529391258226},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1529391258422},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1529391258424},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"7896c3ee107e1a8b9108b6019f1c070600a1e8cc","modified":1529391258428},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"0e55cbd93852dc3f8ccb44df74d35d9918f847e0","modified":1529391258430},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"58e7dd5947817d9fc30770712fc39b2f52230d1e","modified":1529391258477},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"a25408534f8fe6e321db4bbf9dd03335d648fe17","modified":1529391258479},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"4069f918ccc312da86db6c51205fc6c6eaabb116","modified":1529391258482},{"_id":"themes/next/source/css/_variables/base.styl","hash":"b1f6ea881a4938a54603d68282b0f8efb4d7915d","modified":1529391258484},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1529391258521},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1529391258522},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1529391258525},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"0289031200c3d4c2bdd801ee10fff13bb2c353e4","modified":1529391258524},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1529391258528},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1529391258527},{"_id":"themes/next/source/js/src/motion.js","hash":"885176ed51d468f662fbf0fc09611f45c7e5a3b1","modified":1529391258530},{"_id":"themes/next/source/js/src/post-details.js","hash":"93a18271b4123dd8f94f09d1439b47c3c19a8712","modified":1529391258531},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1529391258535},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1529391258537},{"_id":"themes/next/source/js/src/utils.js","hash":"b3e9eca64aba59403334f3fa821f100d98d40337","modified":1529391258538},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1529391258566},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1529391258558},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"b02737510e9b89aeed6b54f89f602a9c24b06ff2","modified":1529391258569},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1529391258571},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1529391258573},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1529391258599},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1529391258601},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1529391258602},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1529391258605},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1529391258610},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1529391258611},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1529391258615},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1529391258614},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1529391258616},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1529391258645},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1529391258652},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1529391258653},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1529391258655},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1529391258657},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1529391258658},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1529391258660},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"14264a210bf94232d58d7599ea2ba93bfa4fb458","modified":1529391258662},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"e33aa8fa48b6639d8d8b937d13261597dd473b3a","modified":1529391258664},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"2ce5f3bf15c523b9bfc97720d8884bb22602a454","modified":1529391258666},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1529391258669},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1529391258674},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1529391258670},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1529391258673},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1529391258675},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1529391258676},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1529391258677},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1529391258679},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1529391258680},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1529391258682},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1529391258683},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1529391258684},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1529391258686},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1529391258687},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"2d9a9f38c493fdf7c0b833bb9184b6a1645c11b2","modified":1529391258690},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"8148492dd49aa876d32bb7d5b728d3f5bf6f5074","modified":1529391258693},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"46a50b91c98b639c9a2b9265c5a1e66a5c656881","modified":1529391258691},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1529391258706},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1529391258713},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1529391258708},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1529391258715},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1529391258716},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1529391258648},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"731f1cff409956b349ea0a33b3f3b5b2fd9f3bc4","modified":1529391258110},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1529391258098},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1529391258272},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1529391258274},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"8f86f694c0749a18ab3ad6f6df75466ca137a4bc","modified":1529391258317},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1529391258319},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"8b32928686c327151e13d3ab100157f9a03cd59f","modified":1529391258321},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1529391258322},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1529391258323},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"4f2801fc4cf3f31bf2069f41db8c6ce0e3da9e39","modified":1529391258350},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1529391258378},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1529391258409},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"24ee4b356ff55fc6e58f26a929fa07750002cf29","modified":1529391258412},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"91ca75492cd51f2553f4d294ed2f48239fcd55eb","modified":1529391258415},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1529391258413},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1529391258417},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1529391258419},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1529391258420},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"60fa84aa7731760f05f52dd7d8f79b5f74ac478d","modified":1529391258434},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1529391258437},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1529391258439},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1529391258441},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"9c99034f8e00d47e978b3959f51eb4a9ded0fcc8","modified":1529391258444},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1529391258443},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1529391258446},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1529391258447},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1529391258455},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"e695e58f714129ca292c2e54cd62c251aca7f7fe","modified":1529391258458},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1529391258456},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1529391258460},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1529391258462},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1529391258467},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"416988dca389e6e2fdfa51fa7f4ee07eb53f82fb","modified":1529391258469},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1529391258471},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1529391258474},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"ad2dcedf393ed1f3f5afd2508d24969c916d02fc","modified":1529391258474},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1529391258474},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"f1d0b5d7af32c423eaa8bb93ab6a0b45655645dc","modified":1529391258533},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"6c26cdb36687d4f0a11dabf5290a909c3506be5c","modified":1529391258551},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"6d586bfcfb7ae48f1b12f76eec82d3ad31947501","modified":1529391258554},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"16b03db23a52623348f37c04544f2792032c1fb6","modified":1529391258556},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1529391258575},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1529391258576},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1529391258577},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1529391258580},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1529391258581},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1529391258582},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1529391258594},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1529391258595},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1529391258597},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1529391258606},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1529391258608},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1529391258619},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1529391258620},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1529391258621},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1529391258702},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1529391258704},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"4ac683b2bc8531c84d98f51b86957be0e6f830f3","modified":1529391258553},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1529391258642},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1529391258643},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1529391258711},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"731f1cff409956b349ea0a33b3f3b5b2fd9f3bc4","modified":1529391258098},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"9f73c4696f0907aa451a855444f88fc0698fa472","modified":1529391258326},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1529391258328},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1529391258331},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1529391258329},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1529391258333},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1529391258335},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1529391258337},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"50450d9fdc8a2b2be8cfca51e3e1a01ffd636c0b","modified":1529391258339},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1529391258341},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1529391258344},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"b6f3a06a94a6ee5470c956663164d58eda818a64","modified":1529391258343},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1529391258346},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1529391258348},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1529391258349},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"62fbbd32cf5a99ae550c45c763a2c4813a138d01","modified":1529391258353},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1529391258357},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1529391258361},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1529391258360},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"a6c6eb8adba0a090ad1f4b9124e866887f20d10d","modified":1529391258362},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1529391258362},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d0d7a5c90d62b685520d2b47fea8ba6019ff5402","modified":1529391258362},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1529391258362},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1529391258363},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1529391258363},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ca88ea6999a61fb905eb6e72eba5f92d4ee31e6e","modified":1529391258363},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"ccb34c52be8adba5996c6b94f9e723bd07d34c16","modified":1529391258363},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1529391258364},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"7968343e41f8b94b318c36289dff1196c3eb1791","modified":1529391258364},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"89d6c3b697efc63de42afd2e89194b1be14152af","modified":1529391258364},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1529391258365},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"39f04c4c7237a4e10acd3002331992b79945d241","modified":1529391258365},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1529391258368},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1529391258369},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"8dd9a1c6f4f6baa00c2cf01837e7617120cf9660","modified":1529391258366},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1529391258371},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"c8fe49a4bc014c24dead05b782a7082411a4abc5","modified":1529391258373},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"5ef6343835f484a2c0770bd1eb9cc443609e4c39","modified":1529391258375},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1529391258377},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a1521d48bb06d8d703753f52a198baa197af7da2","modified":1529391258374},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1529391258393},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1529391258393},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1529391258396},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1529391258397},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"874278147115601d2abf15987f5f7a84ada1ac6b","modified":1529391258399},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1529391258400},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1529391258403},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1529391258401},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"28825ae15fa20ae3942cdaa7bcc1f3523ce59acc","modified":1529391258405},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9c8196394a89dfa40b87bf0019e80144365a9c93","modified":1529391258406},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1529391258382},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1529391258380},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"f825da191816eef69ea8efb498a7f756d5ebb498","modified":1529391258383},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1529391258385},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"b7076e58d647265ee0ad2b461fe8ce72c9373bc5","modified":1529391258388},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1529391258387},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"9a409b798decdefdaf7a23f0b11004a8c27e82f3","modified":1529391258390},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"b80604868e4f5cf20fccafd7ee415c20c804f700","modified":1529391258392},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"154a87a32d2fead480d5e909c37f6c476671c5e6","modified":1529391258391},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1529391258450},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1529391258452},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1529391258464},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1529391258543},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1529391258545},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1529391258546},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1529391258548},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1529391258549},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1529391258585},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1529391258586},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1529391258588},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1529391258589},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1529391258591},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1529391258592},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1529391258626},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1529391258630},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1529391258639},{"_id":"themes/next/.git/objects/pack/pack-88df782ce6fe81241cc1f463a32af916d4193f78.idx","hash":"bb5ce2ffd2b23aeab4e99d217116d616aeac700b","modified":1529391257683},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1529391258564},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1529391258698},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1529391258636},{"_id":"themes/next/.git/objects/pack/pack-88df782ce6fe81241cc1f463a32af916d4193f78.pack","hash":"66da6ac57fd465b0b8f43f6be7c446eeee84eb9f","modified":1529391257939},{"_id":"public/404.html","hash":"080140d6dfb4022f2d06f11d039b89e704c6ab78","modified":1561451501619},{"_id":"public/categories/index.html","hash":"f0f7eb37d1f49ac91d749236971159b95e4fe6bf","modified":1561451501660},{"_id":"public/2019/02/20/prototype、constructor以及-proto-的关系/index.html","hash":"93048703f1e34fecdab950ae0772003ebcf16740","modified":1561451501661},{"_id":"public/archives/index.html","hash":"1d6575086860ca57964742042ea0546eec68784a","modified":1561451501661},{"_id":"public/archives/2016/index.html","hash":"20e2610a730c6b1dced763376b96dea9d8120114","modified":1561451501661},{"_id":"public/archives/2016/09/index.html","hash":"bb9f6638f64add02176c5f9dc566cd29e7663431","modified":1561451501661},{"_id":"public/archives/2017/index.html","hash":"3b389fbb6a7e647bdea3c9426718962098e3e6ee","modified":1561451501661},{"_id":"public/archives/2017/04/index.html","hash":"4432a233f3354f1b337547213ad05a9396b35490","modified":1561451501661},{"_id":"public/archives/2019/index.html","hash":"d7372ead19ddf4ea74c5f292230faef4bcdc042e","modified":1561451501661},{"_id":"public/archives/2019/02/index.html","hash":"461bd150904c771210f520afed99247749fecccb","modified":1561451501661},{"_id":"public/archives/2019/06/index.html","hash":"32f661f1ddc0fe53d8e6487d17d4176c00254a85","modified":1561451501661},{"_id":"public/categories/JS/index.html","hash":"adced75e840db8873e497fd7d169c90324485e71","modified":1561451501661},{"_id":"public/2019/06/25/js判断浏览器类型/index.html","hash":"f22aff23ef99abe5dde38b40f39e4002fa84328e","modified":1561451501661},{"_id":"public/2017/04/08/howToUseApplyCallBind/index.html","hash":"4ff4ee971c6e5fa56253035753217b1c77ffa082","modified":1561451501661},{"_id":"public/2016/09/10/数组和字符串对象方法总结/index.html","hash":"995c86fcb6dba6f7c49ce237a09f7f77e1194632","modified":1561451501662},{"_id":"public/index.html","hash":"91dafe264437fee5317a647bd818c79e67bf15ce","modified":1561451501662},{"_id":"public/CNAME","hash":"038c6e63b1bf3ce0242131d240226fb297ad97d3","modified":1561451501684},{"_id":"public/uploads/avatar.png","hash":"b7fe776e0aaeb8dd63912b9adba53d6d2513186d","modified":1561451501684},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1561451501684},{"_id":"public/img/404.jpg","hash":"58c127c7ec06b36637146988dbc72490de77b835","modified":1561451501684},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1561451501684},{"_id":"public/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1561451501684},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1561451501684},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1561451501684},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1561451501684},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1561451501684},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1561451501685},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1561451501685},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1561451501685},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1561451501685},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1561451501685},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1561451501685},{"_id":"public/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1561451501685},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1561451501685},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1561451501685},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1561451501685},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1561451501685},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1561451501685},{"_id":"public/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1561451501685},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1561451501685},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1561451501685},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1561451501685},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1561451501685},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1561451501686},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1561451501686},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1561451501686},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1561451501686},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1561451501686},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1561451501686},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1561451501686},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1561451501686},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1561451501686},{"_id":"public/2017/04/08/howToUseApplyCallBind/bind_support.png","hash":"c5149bfea81c05a6b6b6131e9e6dd08fb5cea3f5","modified":1561451501686},{"_id":"public/2016/09/10/数组和字符串对象方法总结/4.jpg","hash":"58c127c7ec06b36637146988dbc72490de77b835","modified":1561451501686},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1561451502190},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1561451502195},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1561451502205},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1561451502205},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1561451502205},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1561451502205},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1561451502205},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1561451502206},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1561451502206},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1561451502206},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1561451502206},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1561451502206},{"_id":"public/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1561451502206},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1561451502206},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1561451502206},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1561451502206},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1561451502206},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1561451502206},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1561451502206},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1561451502206},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1561451502206},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1561451502206},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1561451502206},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1561451502206},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1561451502206},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1561451502207},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1561451502207},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1561451502207},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1561451502207},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1561451502207},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1561451502207},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1561451502207},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1561451502207},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1561451502207},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1561451502207},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1561451502207},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1561451502207},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1561451502207},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1561451502207},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1561451502207},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1561451502207},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1561451502207},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1561451502207},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1561451502207},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1561451502208},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1561451502208},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1561451502208},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1561451502208},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1561451502208},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1561451502208},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1561451502208},{"_id":"public/css/main.css","hash":"dd379fc9db508037046f1206a3dd86fd5be0ff71","modified":1561451502208},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1561451502208},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1561451502208},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1561451502208},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1561451502208},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1561451502208},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1561451502208},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1561451502209},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1561451502209},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1561451502209},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1561451502209},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1561451502209},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1561451502209},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1561451502209},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1561451502209},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1561451502209},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1561451502209},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1561451502209},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1561451502209},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1561451502210},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1561451502210},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1561451502210},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1561451502210},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1561451502211},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1561451502229}],"Category":[{"name":"JS","_id":"cjxbjwoi20004zwuc8ce4h4j5"}],"Data":[],"Page":[{"layout":"false","title":"404","_content":"\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n\t<meta charset=\"UTF-8\">\n\t<title>404</title>\n</head>\n<body>\n\t<img style=\"display:block;margin:20px auto 0;\" src=\"img/404.jpg\" height=\"512\" width=\"465\" alt=\"\">\n</body>\n</html>","source":"404.html","raw":"layout: false\ntitle: \"404\"\n---\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n\t<meta charset=\"UTF-8\">\n\t<title>404</title>\n</head>\n<body>\n\t<img style=\"display:block;margin:20px auto 0;\" src=\"img/404.jpg\" height=\"512\" width=\"465\" alt=\"\">\n</body>\n</html>","date":"2018-06-19T06:40:29.819Z","updated":"2018-06-19T06:40:29.819Z","path":"404.html","comments":1,"_id":"cjxbjwodn0000zwucbub7jwtu","content":"\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n\t<meta charset=\"UTF-8\">\n\t<title>404</title>\n</head>\n<body>\n\t<img style=\"display:block;margin:20px auto 0;\" src=\"img/404.jpg\" height=\"512\" width=\"465\" alt=\"\">\n</body>\n</html>","site":{"data":{}},"excerpt":"","more":"\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n\t<meta charset=\"UTF-8\">\n\t<title>404</title>\n</head>\n<body>\n\t<img style=\"display:block;margin:20px auto 0;\" src=\"img/404.jpg\" height=\"512\" width=\"465\" alt=\"\">\n</body>\n</html>"},{"title":"categories","date":"2016-07-16T16:58:52.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2016-07-17 00:58:52\ntype: \"categories\"\ncomments: false\n---\n","updated":"2018-06-19T06:40:29.831Z","path":"categories/index.html","layout":"page","_id":"cjxbjwohu0002zwucqi01s855","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"JS高程摘抄之apply(),call(),bind()方法的使用和区别","date":"2017-04-08T06:11:05.000Z","_content":"　　关于apply()和call()方法，老生常谈。他们的使用和区别网上一搜一大堆，但是结果稂莠不齐，果然还得靠自己动手。\n　　apply()和call()方法是每个函数都包含的两个非继承而来的方法。这个两个方法的用途都是**在特定的作用域中调用函数，实际上等于设置函数体内this对象的值**。\n<!-- more -->\n### apply()\n　　apply()方法接受两个参数：**一个是在其中运行的函数的作用域，另一个是参数数组**。其中，第二个参数可以是Array的实例，也可以是arguments对象。例如：\n```\nfunction sum(num1, num2) {\n    return num1 + num2;\n}\n\nfunction callSum1(num1, num2) {\n    return sum.apply(this, arguments);   //传入arguments对象\n}\n\nfunction callSum2(num1, num2) {\n    return sum.apply(this, [num1, num2]);  //传入数组\n}\n\nalert(callSum1(10, 10));  //20\nalert(callSum2(10, 10));  //20\n```\n　　在上面的例子中，callSum1()在执行sum()函数时传入了this作为this值（因为在全局作用域中调用的，在非严格模式下传入的就是windows对象）和arguments对象。而callSum2同样调用了sum()函数，但它传入的则是this和一个参数数组。这两个函数都会正常执行并返回正确的结果。\n### call()\n　　call()方法与apply()方法的**作用相同，它们的区别仅在于接收参数的方式不同**。对于call()方法而言，第一个参数是this值没有变化，变化的是其余参数都直接传递给函数。换句话说，在使用call()方法时，传递给函数的参数必须逐个列举出来，如：\n```\nfunction sum(sum1, sum2) {\n    return num1 + num2;\n}\nfunction callSum(sum1, sum2) {\n    return sum.call(this, num1, num2);\n}\nalert(callSum(10, 10));  //20\n```\n　　在使用call()方法的情况下，callSum()必须明确地传入每一个参数。结果与使用apply()**没有什么不同**。这两个方法使用哪一个完全取决于采用哪种给函数传递参数的方式最方便。在不给函数传递参数的情况下，使用哪个方法都无所谓。\n### 真正的用武之地\n　　传递参数并非apply()和call()真正的用武之地，它们真正强大的地方是**能够扩充函数赖以运行的作用域**。看例子：\n```\nwindow.color = 'red';\nvar o = {color: 'blue'};\n\nfunction sayColor() {\n    alert(this.color);\n}\n\nsayColor();               //red\n\nsayColor.call(this);      //red\nsayColor.call(window);    //red　　\nsayColor.call(o);         //blue\n```\n　　sayColor()是作为全局函数定义的，而且当在全局作用域中调用它时，它确实会显示'red'————因为对this.color的求值会转换成对window.color的求值。而sayColor.call(this)和sayColor.call(window)，则是两种显式地在全局作用域中调用函数的方式，结果当然都会显示'red'。但是，当运行sayColor.call(o)时，函数的执行环境就不一样了，因为此时函数体内的this对象指向了o，于是结果显示的是'blue'。\n　　使用call()或者apply()来扩充作用域的最大好处，就是对象不需要与方法有任何耦合关系。\n### bind()\n　　bind()方法是在ECMAScript5中定义的一个方法。这个方法会创建一个函数的实例，其中this值会被绑定到传给bind()函数的值。例如：\n```\nwindow.color = 'red';\nvar o = {color: 'blue'};\n\nfunction sayColor() {\n    alert(this.color);\n}\n\nvar objectSayColor = sayColor.bind(o);\nobjectSayColor();    //blue\n```\n　　在这里，sayColor()调用bind()并传入对象o，创建了objectSayColor()函数。objectSayColor()函数的this值等于o，因此即使是在全局作用域中调用这个函数，也会看到'blue'。\n　　bind()方法的浏览器兼容性如下：\n\n![bind_support](bind_support.png)\n　　\n　　*<small>参考书籍：[《JavaScript高级程序设计（第三版）》，Professional JavaScript for Web Developers 3rd Edition，作者: Nicholas C.Zakas ](https://book.douban.com/subject/10546125/)*\n\n","source":"_posts/howToUseApplyCallBind.md","raw":"---\ntitle: 'JS高程摘抄之apply(),call(),bind()方法的使用和区别'\ndate: 2017-04-08 14:11:05\ncategories: JS\ntags:\n---\n　　关于apply()和call()方法，老生常谈。他们的使用和区别网上一搜一大堆，但是结果稂莠不齐，果然还得靠自己动手。\n　　apply()和call()方法是每个函数都包含的两个非继承而来的方法。这个两个方法的用途都是**在特定的作用域中调用函数，实际上等于设置函数体内this对象的值**。\n<!-- more -->\n### apply()\n　　apply()方法接受两个参数：**一个是在其中运行的函数的作用域，另一个是参数数组**。其中，第二个参数可以是Array的实例，也可以是arguments对象。例如：\n```\nfunction sum(num1, num2) {\n    return num1 + num2;\n}\n\nfunction callSum1(num1, num2) {\n    return sum.apply(this, arguments);   //传入arguments对象\n}\n\nfunction callSum2(num1, num2) {\n    return sum.apply(this, [num1, num2]);  //传入数组\n}\n\nalert(callSum1(10, 10));  //20\nalert(callSum2(10, 10));  //20\n```\n　　在上面的例子中，callSum1()在执行sum()函数时传入了this作为this值（因为在全局作用域中调用的，在非严格模式下传入的就是windows对象）和arguments对象。而callSum2同样调用了sum()函数，但它传入的则是this和一个参数数组。这两个函数都会正常执行并返回正确的结果。\n### call()\n　　call()方法与apply()方法的**作用相同，它们的区别仅在于接收参数的方式不同**。对于call()方法而言，第一个参数是this值没有变化，变化的是其余参数都直接传递给函数。换句话说，在使用call()方法时，传递给函数的参数必须逐个列举出来，如：\n```\nfunction sum(sum1, sum2) {\n    return num1 + num2;\n}\nfunction callSum(sum1, sum2) {\n    return sum.call(this, num1, num2);\n}\nalert(callSum(10, 10));  //20\n```\n　　在使用call()方法的情况下，callSum()必须明确地传入每一个参数。结果与使用apply()**没有什么不同**。这两个方法使用哪一个完全取决于采用哪种给函数传递参数的方式最方便。在不给函数传递参数的情况下，使用哪个方法都无所谓。\n### 真正的用武之地\n　　传递参数并非apply()和call()真正的用武之地，它们真正强大的地方是**能够扩充函数赖以运行的作用域**。看例子：\n```\nwindow.color = 'red';\nvar o = {color: 'blue'};\n\nfunction sayColor() {\n    alert(this.color);\n}\n\nsayColor();               //red\n\nsayColor.call(this);      //red\nsayColor.call(window);    //red　　\nsayColor.call(o);         //blue\n```\n　　sayColor()是作为全局函数定义的，而且当在全局作用域中调用它时，它确实会显示'red'————因为对this.color的求值会转换成对window.color的求值。而sayColor.call(this)和sayColor.call(window)，则是两种显式地在全局作用域中调用函数的方式，结果当然都会显示'red'。但是，当运行sayColor.call(o)时，函数的执行环境就不一样了，因为此时函数体内的this对象指向了o，于是结果显示的是'blue'。\n　　使用call()或者apply()来扩充作用域的最大好处，就是对象不需要与方法有任何耦合关系。\n### bind()\n　　bind()方法是在ECMAScript5中定义的一个方法。这个方法会创建一个函数的实例，其中this值会被绑定到传给bind()函数的值。例如：\n```\nwindow.color = 'red';\nvar o = {color: 'blue'};\n\nfunction sayColor() {\n    alert(this.color);\n}\n\nvar objectSayColor = sayColor.bind(o);\nobjectSayColor();    //blue\n```\n　　在这里，sayColor()调用bind()并传入对象o，创建了objectSayColor()函数。objectSayColor()函数的this值等于o，因此即使是在全局作用域中调用这个函数，也会看到'blue'。\n　　bind()方法的浏览器兼容性如下：\n\n![bind_support](bind_support.png)\n　　\n　　*<small>参考书籍：[《JavaScript高级程序设计（第三版）》，Professional JavaScript for Web Developers 3rd Edition，作者: Nicholas C.Zakas ](https://book.douban.com/subject/10546125/)*\n\n","slug":"howToUseApplyCallBind","published":1,"updated":"2018-06-19T08:11:55.086Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxbjwohq0001zwucal8fvv3q","content":"<p>　　关于apply()和call()方法，老生常谈。他们的使用和区别网上一搜一大堆，但是结果稂莠不齐，果然还得靠自己动手。<br>　　apply()和call()方法是每个函数都包含的两个非继承而来的方法。这个两个方法的用途都是<strong>在特定的作用域中调用函数，实际上等于设置函数体内this对象的值</strong>。<br><a id=\"more\"></a></p>\n<h3 id=\"apply\"><a href=\"#apply\" class=\"headerlink\" title=\"apply()\"></a>apply()</h3><p>　　apply()方法接受两个参数：<strong>一个是在其中运行的函数的作用域，另一个是参数数组</strong>。其中，第二个参数可以是Array的实例，也可以是arguments对象。例如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function sum(num1, num2) &#123;</span><br><span class=\"line\">    return num1 + num2;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function callSum1(num1, num2) &#123;</span><br><span class=\"line\">    return sum.apply(this, arguments);   //传入arguments对象</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function callSum2(num1, num2) &#123;</span><br><span class=\"line\">    return sum.apply(this, [num1, num2]);  //传入数组</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">alert(callSum1(10, 10));  //20</span><br><span class=\"line\">alert(callSum2(10, 10));  //20</span><br></pre></td></tr></table></figure></p>\n<p>　　在上面的例子中，callSum1()在执行sum()函数时传入了this作为this值（因为在全局作用域中调用的，在非严格模式下传入的就是windows对象）和arguments对象。而callSum2同样调用了sum()函数，但它传入的则是this和一个参数数组。这两个函数都会正常执行并返回正确的结果。</p>\n<h3 id=\"call\"><a href=\"#call\" class=\"headerlink\" title=\"call()\"></a>call()</h3><p>　　call()方法与apply()方法的<strong>作用相同，它们的区别仅在于接收参数的方式不同</strong>。对于call()方法而言，第一个参数是this值没有变化，变化的是其余参数都直接传递给函数。换句话说，在使用call()方法时，传递给函数的参数必须逐个列举出来，如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function sum(sum1, sum2) &#123;</span><br><span class=\"line\">    return num1 + num2;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">function callSum(sum1, sum2) &#123;</span><br><span class=\"line\">    return sum.call(this, num1, num2);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">alert(callSum(10, 10));  //20</span><br></pre></td></tr></table></figure></p>\n<p>　　在使用call()方法的情况下，callSum()必须明确地传入每一个参数。结果与使用apply()<strong>没有什么不同</strong>。这两个方法使用哪一个完全取决于采用哪种给函数传递参数的方式最方便。在不给函数传递参数的情况下，使用哪个方法都无所谓。</p>\n<h3 id=\"真正的用武之地\"><a href=\"#真正的用武之地\" class=\"headerlink\" title=\"真正的用武之地\"></a>真正的用武之地</h3><p>　　传递参数并非apply()和call()真正的用武之地，它们真正强大的地方是<strong>能够扩充函数赖以运行的作用域</strong>。看例子：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">window.color = &apos;red&apos;;</span><br><span class=\"line\">var o = &#123;color: &apos;blue&apos;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">function sayColor() &#123;</span><br><span class=\"line\">    alert(this.color);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">sayColor();               //red</span><br><span class=\"line\"></span><br><span class=\"line\">sayColor.call(this);      //red</span><br><span class=\"line\">sayColor.call(window);    //red　　</span><br><span class=\"line\">sayColor.call(o);         //blue</span><br></pre></td></tr></table></figure></p>\n<p>　　sayColor()是作为全局函数定义的，而且当在全局作用域中调用它时，它确实会显示’red’————因为对this.color的求值会转换成对window.color的求值。而sayColor.call(this)和sayColor.call(window)，则是两种显式地在全局作用域中调用函数的方式，结果当然都会显示’red’。但是，当运行sayColor.call(o)时，函数的执行环境就不一样了，因为此时函数体内的this对象指向了o，于是结果显示的是’blue’。<br>　　使用call()或者apply()来扩充作用域的最大好处，就是对象不需要与方法有任何耦合关系。</p>\n<h3 id=\"bind\"><a href=\"#bind\" class=\"headerlink\" title=\"bind()\"></a>bind()</h3><p>　　bind()方法是在ECMAScript5中定义的一个方法。这个方法会创建一个函数的实例，其中this值会被绑定到传给bind()函数的值。例如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">window.color = &apos;red&apos;;</span><br><span class=\"line\">var o = &#123;color: &apos;blue&apos;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">function sayColor() &#123;</span><br><span class=\"line\">    alert(this.color);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">var objectSayColor = sayColor.bind(o);</span><br><span class=\"line\">objectSayColor();    //blue</span><br></pre></td></tr></table></figure></p>\n<p>　　在这里，sayColor()调用bind()并传入对象o，创建了objectSayColor()函数。objectSayColor()函数的this值等于o，因此即使是在全局作用域中调用这个函数，也会看到’blue’。<br>　　bind()方法的浏览器兼容性如下：</p>\n<p><img src=\"bind_support.png\" alt=\"bind_support\"><br>　　<br>　　<em><small>参考书籍：<a href=\"https://book.douban.com/subject/10546125/\" target=\"_blank\" rel=\"noopener\">《JavaScript高级程序设计（第三版）》，Professional JavaScript for Web Developers 3rd Edition，作者: Nicholas C.Zakas </a></small></em></p>\n","site":{"data":{}},"excerpt":"<p>　　关于apply()和call()方法，老生常谈。他们的使用和区别网上一搜一大堆，但是结果稂莠不齐，果然还得靠自己动手。<br>　　apply()和call()方法是每个函数都包含的两个非继承而来的方法。这个两个方法的用途都是<strong>在特定的作用域中调用函数，实际上等于设置函数体内this对象的值</strong>。<br>","more":"</p>\n<h3 id=\"apply\"><a href=\"#apply\" class=\"headerlink\" title=\"apply()\"></a>apply()</h3><p>　　apply()方法接受两个参数：<strong>一个是在其中运行的函数的作用域，另一个是参数数组</strong>。其中，第二个参数可以是Array的实例，也可以是arguments对象。例如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function sum(num1, num2) &#123;</span><br><span class=\"line\">    return num1 + num2;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function callSum1(num1, num2) &#123;</span><br><span class=\"line\">    return sum.apply(this, arguments);   //传入arguments对象</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function callSum2(num1, num2) &#123;</span><br><span class=\"line\">    return sum.apply(this, [num1, num2]);  //传入数组</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">alert(callSum1(10, 10));  //20</span><br><span class=\"line\">alert(callSum2(10, 10));  //20</span><br></pre></td></tr></table></figure></p>\n<p>　　在上面的例子中，callSum1()在执行sum()函数时传入了this作为this值（因为在全局作用域中调用的，在非严格模式下传入的就是windows对象）和arguments对象。而callSum2同样调用了sum()函数，但它传入的则是this和一个参数数组。这两个函数都会正常执行并返回正确的结果。</p>\n<h3 id=\"call\"><a href=\"#call\" class=\"headerlink\" title=\"call()\"></a>call()</h3><p>　　call()方法与apply()方法的<strong>作用相同，它们的区别仅在于接收参数的方式不同</strong>。对于call()方法而言，第一个参数是this值没有变化，变化的是其余参数都直接传递给函数。换句话说，在使用call()方法时，传递给函数的参数必须逐个列举出来，如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function sum(sum1, sum2) &#123;</span><br><span class=\"line\">    return num1 + num2;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">function callSum(sum1, sum2) &#123;</span><br><span class=\"line\">    return sum.call(this, num1, num2);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">alert(callSum(10, 10));  //20</span><br></pre></td></tr></table></figure></p>\n<p>　　在使用call()方法的情况下，callSum()必须明确地传入每一个参数。结果与使用apply()<strong>没有什么不同</strong>。这两个方法使用哪一个完全取决于采用哪种给函数传递参数的方式最方便。在不给函数传递参数的情况下，使用哪个方法都无所谓。</p>\n<h3 id=\"真正的用武之地\"><a href=\"#真正的用武之地\" class=\"headerlink\" title=\"真正的用武之地\"></a>真正的用武之地</h3><p>　　传递参数并非apply()和call()真正的用武之地，它们真正强大的地方是<strong>能够扩充函数赖以运行的作用域</strong>。看例子：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">window.color = &apos;red&apos;;</span><br><span class=\"line\">var o = &#123;color: &apos;blue&apos;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">function sayColor() &#123;</span><br><span class=\"line\">    alert(this.color);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">sayColor();               //red</span><br><span class=\"line\"></span><br><span class=\"line\">sayColor.call(this);      //red</span><br><span class=\"line\">sayColor.call(window);    //red　　</span><br><span class=\"line\">sayColor.call(o);         //blue</span><br></pre></td></tr></table></figure></p>\n<p>　　sayColor()是作为全局函数定义的，而且当在全局作用域中调用它时，它确实会显示’red’————因为对this.color的求值会转换成对window.color的求值。而sayColor.call(this)和sayColor.call(window)，则是两种显式地在全局作用域中调用函数的方式，结果当然都会显示’red’。但是，当运行sayColor.call(o)时，函数的执行环境就不一样了，因为此时函数体内的this对象指向了o，于是结果显示的是’blue’。<br>　　使用call()或者apply()来扩充作用域的最大好处，就是对象不需要与方法有任何耦合关系。</p>\n<h3 id=\"bind\"><a href=\"#bind\" class=\"headerlink\" title=\"bind()\"></a>bind()</h3><p>　　bind()方法是在ECMAScript5中定义的一个方法。这个方法会创建一个函数的实例，其中this值会被绑定到传给bind()函数的值。例如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">window.color = &apos;red&apos;;</span><br><span class=\"line\">var o = &#123;color: &apos;blue&apos;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">function sayColor() &#123;</span><br><span class=\"line\">    alert(this.color);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">var objectSayColor = sayColor.bind(o);</span><br><span class=\"line\">objectSayColor();    //blue</span><br></pre></td></tr></table></figure></p>\n<p>　　在这里，sayColor()调用bind()并传入对象o，创建了objectSayColor()函数。objectSayColor()函数的this值等于o，因此即使是在全局作用域中调用这个函数，也会看到’blue’。<br>　　bind()方法的浏览器兼容性如下：</p>\n<p><img src=\"bind_support.png\" alt=\"bind_support\"><br>　　<br>　　<em><small>参考书籍：<a href=\"https://book.douban.com/subject/10546125/\" target=\"_blank\" rel=\"noopener\">《JavaScript高级程序设计（第三版）》，Professional JavaScript for Web Developers 3rd Edition，作者: Nicholas C.Zakas </a></small></em></p>"},{"title":"prototype、constructor以及__proto__的关系","date":"2019-02-20T02:59:28.000Z","_content":"\n​\t实例对象没有“__proto__”属性，该属性是从原型对象上继承的。","source":"_posts/prototype、constructor以及-proto-的关系.md","raw":"---\ntitle: prototype、constructor以及__proto__的关系\ndate: 2019-02-20 10:59:28\ncategories: JS\ntags:\n---\n\n​\t实例对象没有“__proto__”属性，该属性是从原型对象上继承的。","slug":"prototype、constructor以及-proto-的关系","published":1,"updated":"2019-02-20T03:01:51.240Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxbjwohv0003zwuckpfih30r","content":"<p>​    实例对象没有“<strong>proto</strong>”属性，该属性是从原型对象上继承的。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>​    实例对象没有“<strong>proto</strong>”属性，该属性是从原型对象上继承的。</p>\n"},{"title":"js判断浏览器类型","date":"2019-06-25T06:31:21.000Z","_content":"\n​        迄今为止，客户端检测仍然是Web 开发领域中一个饱受争议的话题。一谈到这个话题，人们总会不约而同地提到浏览器应该支持一组最常用的公共功能。在理想状态下，确实应该如此。检测Web 客户端的手段很多，而且各有利弊。但最重要的还是要知道，**不到万不得已，就不要使用客户端检测。只要能找到更通用的方法，就应该优先采用更通用的方法。**一言以蔽之，先设计最通用的方案，然后再使用特定于浏览器的技术增强该方案。\n\n<!-- more -->\n\n### 正则方法判断userAgent(用户代理检测)\n\n​        用户代理检测通过检测用户代理字符串来确定实际使用的浏览器。在每一次HTTP 请求过程中，用户代理字符串是作为响应首部发送的，而且该字符串可以通过JavaScript 的navigator.userAgent 属性访问。可以在控制台中直接输出查看。比如：\n\n- > Chrome：`\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36\"`\n\n- > Firefox:`\"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:66.0) Gecko/20100101 Firefox/66.0\"` \n\n- > IE:`\"Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)\"`\n\n  根据以上返回内容可以用正则的方法来判断浏览器的类型\n\n```\nnavigator.sayswho= (function(){\n\tvar ua= navigator.userAgent, tem,\n\tM= ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i) || [];\n\tif(/trident/i.test(M[1])){\n\t\ttem=  /\\brv[ :]+(\\d+)/g.exec(ua) || [];\n\t\treturn 'IE '+(tem[1] || '');\n\t}\n\tif(M[1]=== 'Chrome'){\n\t\ttem= ua.match(/\\b(OPR|Edge)\\/(\\d+)/);\n\t\tif(tem!= null) return tem.slice(1).join(' ').replace('OPR', 'Opera');\n\t}\n\tM= M[2]? [M[1], M[2]]: [navigator.appName, navigator.appVersion, '-?'];\n\tif((tem= ua.match(/version\\/(\\d+)/i))!= null) M.splice(1, 1, tem[1]);\n\treturn M.join(' ');\n})();\n```\n\n​        同样的也可以用来判断设备类型mobile or pc\n\n```\nfunction browserRedirect() {\n\tvar sUserAgent = navigator.userAgent.toLowerCase();\n\tvar bIsIpad = sUserAgent.match(/ipad/i) == \"ipad\";\n\tvar bIsIphoneOs = sUserAgent.match(/iphone os/i) == \"iphone os\";\n\tvar bIsMidp = sUserAgent.match(/midp/i) == \"midp\";\n\tvar bIsUc7 = sUserAgent.match(/rv:1.2.3.4/i) == \"rv:1.2.3.4\";\n\tvar bIsUc = sUserAgent.match(/ucweb/i) == \"ucweb\";\n\tvar bIsAndroid = sUserAgent.match(/android/i) == \"android\";\n\tvar bIsCE = sUserAgent.match(/windows ce/i) == \"windows ce\";\n\tvar bIsWM = sUserAgent.match(/windows mobile/i) == \"windows mobile\";\n\tdocument.writeln(\"您的浏览设备为：\");\n\tif (bIsIpad || bIsIphoneOs || bIsMidp || bIsUc7 || bIsUc || bIsAndroid || bIsCE || bIsWM) {\n\t\tdocument.writeln(\"phone\");\n\t}\n}\nbrowserRedirect();\n```\n\n​        在服务器端，通过检测用户代理字符串来确定用户使用的浏览器是一种常用而且广为接受的做法。而在客户端，用户代理检测一般被当作一种**万不得已才用的做法**，其优先级排在能力检测之后。\n\n### 能力检测\n\n​        能力检测的目标不是识别特定的浏览器，而是识别浏览器的能力。采用这种方式不必顾及特定的浏览器如何如何，只要确定浏览器支持特定的能力，就可以给出解决方案。\n\n​        以下代码段针对不同浏览器的特有属性或方法实习了能力检测。\n\n```\n// Opera 8.0+ (UA detection to detect Blink/v8-powered Opera)\nvar isOpera = !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;\n// Firefox 1.0+\nvar isFirefox = typeof InstallTrigger !== 'undefined';   \n// At least Safari 3+: \"[object HTMLElementConstructor]\"\nvar isSafari = Object.prototype.toString.call(window.HTMLElement).indexOf('Constructor') > 0;\n// Chrome 1+\nvar isChrome = !!window.chrome && !isOpera;              \n// At least IE6，\n//'document.documentMode' returns version number of ie.\nvar isIE = /*@cc_on!@*/false || !!document.documentMode;   \n\nvar output = 'Detecting browsers by ducktyping:<hr>';\noutput += 'isFirefox: ' + isFirefox + '<br>';\noutput += 'isChrome: ' + isChrome + '<br>';\noutput += 'isSafari: ' + isSafari + '<br>';\noutput += 'isOpera: ' + isOpera + '<br>';\noutput += 'isIE: ' + isIE + '<br>';\ndocument.body.innerHTML = output;\n```\n\n### \t补充\n\n​        最后补充两个针对IE10及以下版本的检测代码，提供多个选择：\n\n1.利用IE10及以下独有属性ActiveXObject判断。\n\n```\n//ie10及以下\nfunction(){\n\tif (window.ActiveXObject) {\n\t\t//coding......\n\t}\n}\n```\n\n2.利用`<!--[if IE 9]><![endif]-->`这样的判断语句来判断浏览器版本，只能适用于IE10以下版本。\n\n```\nvar isIE = function (ver) {\n\tvar b = document.createElement('b');\n\tb.innerHTML = '<!--[if IE ' + ver + ']><i></i><![endif]-->';\n\treturn b.getElementsByTagName('i').length === 1;\n}\nif (isIE(9)) {\n\t//coding...\n}\n```\n\n","source":"_posts/js判断浏览器类型.md","raw":"---\ntitle: js判断浏览器类型\ndate: 2019-06-25 14:31:21\ncategories: JS\ntags:\n---\n\n​        迄今为止，客户端检测仍然是Web 开发领域中一个饱受争议的话题。一谈到这个话题，人们总会不约而同地提到浏览器应该支持一组最常用的公共功能。在理想状态下，确实应该如此。检测Web 客户端的手段很多，而且各有利弊。但最重要的还是要知道，**不到万不得已，就不要使用客户端检测。只要能找到更通用的方法，就应该优先采用更通用的方法。**一言以蔽之，先设计最通用的方案，然后再使用特定于浏览器的技术增强该方案。\n\n<!-- more -->\n\n### 正则方法判断userAgent(用户代理检测)\n\n​        用户代理检测通过检测用户代理字符串来确定实际使用的浏览器。在每一次HTTP 请求过程中，用户代理字符串是作为响应首部发送的，而且该字符串可以通过JavaScript 的navigator.userAgent 属性访问。可以在控制台中直接输出查看。比如：\n\n- > Chrome：`\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36\"`\n\n- > Firefox:`\"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:66.0) Gecko/20100101 Firefox/66.0\"` \n\n- > IE:`\"Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)\"`\n\n  根据以上返回内容可以用正则的方法来判断浏览器的类型\n\n```\nnavigator.sayswho= (function(){\n\tvar ua= navigator.userAgent, tem,\n\tM= ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i) || [];\n\tif(/trident/i.test(M[1])){\n\t\ttem=  /\\brv[ :]+(\\d+)/g.exec(ua) || [];\n\t\treturn 'IE '+(tem[1] || '');\n\t}\n\tif(M[1]=== 'Chrome'){\n\t\ttem= ua.match(/\\b(OPR|Edge)\\/(\\d+)/);\n\t\tif(tem!= null) return tem.slice(1).join(' ').replace('OPR', 'Opera');\n\t}\n\tM= M[2]? [M[1], M[2]]: [navigator.appName, navigator.appVersion, '-?'];\n\tif((tem= ua.match(/version\\/(\\d+)/i))!= null) M.splice(1, 1, tem[1]);\n\treturn M.join(' ');\n})();\n```\n\n​        同样的也可以用来判断设备类型mobile or pc\n\n```\nfunction browserRedirect() {\n\tvar sUserAgent = navigator.userAgent.toLowerCase();\n\tvar bIsIpad = sUserAgent.match(/ipad/i) == \"ipad\";\n\tvar bIsIphoneOs = sUserAgent.match(/iphone os/i) == \"iphone os\";\n\tvar bIsMidp = sUserAgent.match(/midp/i) == \"midp\";\n\tvar bIsUc7 = sUserAgent.match(/rv:1.2.3.4/i) == \"rv:1.2.3.4\";\n\tvar bIsUc = sUserAgent.match(/ucweb/i) == \"ucweb\";\n\tvar bIsAndroid = sUserAgent.match(/android/i) == \"android\";\n\tvar bIsCE = sUserAgent.match(/windows ce/i) == \"windows ce\";\n\tvar bIsWM = sUserAgent.match(/windows mobile/i) == \"windows mobile\";\n\tdocument.writeln(\"您的浏览设备为：\");\n\tif (bIsIpad || bIsIphoneOs || bIsMidp || bIsUc7 || bIsUc || bIsAndroid || bIsCE || bIsWM) {\n\t\tdocument.writeln(\"phone\");\n\t}\n}\nbrowserRedirect();\n```\n\n​        在服务器端，通过检测用户代理字符串来确定用户使用的浏览器是一种常用而且广为接受的做法。而在客户端，用户代理检测一般被当作一种**万不得已才用的做法**，其优先级排在能力检测之后。\n\n### 能力检测\n\n​        能力检测的目标不是识别特定的浏览器，而是识别浏览器的能力。采用这种方式不必顾及特定的浏览器如何如何，只要确定浏览器支持特定的能力，就可以给出解决方案。\n\n​        以下代码段针对不同浏览器的特有属性或方法实习了能力检测。\n\n```\n// Opera 8.0+ (UA detection to detect Blink/v8-powered Opera)\nvar isOpera = !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;\n// Firefox 1.0+\nvar isFirefox = typeof InstallTrigger !== 'undefined';   \n// At least Safari 3+: \"[object HTMLElementConstructor]\"\nvar isSafari = Object.prototype.toString.call(window.HTMLElement).indexOf('Constructor') > 0;\n// Chrome 1+\nvar isChrome = !!window.chrome && !isOpera;              \n// At least IE6，\n//'document.documentMode' returns version number of ie.\nvar isIE = /*@cc_on!@*/false || !!document.documentMode;   \n\nvar output = 'Detecting browsers by ducktyping:<hr>';\noutput += 'isFirefox: ' + isFirefox + '<br>';\noutput += 'isChrome: ' + isChrome + '<br>';\noutput += 'isSafari: ' + isSafari + '<br>';\noutput += 'isOpera: ' + isOpera + '<br>';\noutput += 'isIE: ' + isIE + '<br>';\ndocument.body.innerHTML = output;\n```\n\n### \t补充\n\n​        最后补充两个针对IE10及以下版本的检测代码，提供多个选择：\n\n1.利用IE10及以下独有属性ActiveXObject判断。\n\n```\n//ie10及以下\nfunction(){\n\tif (window.ActiveXObject) {\n\t\t//coding......\n\t}\n}\n```\n\n2.利用`<!--[if IE 9]><![endif]-->`这样的判断语句来判断浏览器版本，只能适用于IE10以下版本。\n\n```\nvar isIE = function (ver) {\n\tvar b = document.createElement('b');\n\tb.innerHTML = '<!--[if IE ' + ver + ']><i></i><![endif]-->';\n\treturn b.getElementsByTagName('i').length === 1;\n}\nif (isIE(9)) {\n\t//coding...\n}\n```\n\n","slug":"js判断浏览器类型","published":1,"updated":"2019-06-25T08:31:14.088Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxbjwoi30005zwuctf0ifbnu","content":"<p>​        迄今为止，客户端检测仍然是Web 开发领域中一个饱受争议的话题。一谈到这个话题，人们总会不约而同地提到浏览器应该支持一组最常用的公共功能。在理想状态下，确实应该如此。检测Web 客户端的手段很多，而且各有利弊。但最重要的还是要知道，<strong>不到万不得已，就不要使用客户端检测。只要能找到更通用的方法，就应该优先采用更通用的方法。</strong>一言以蔽之，先设计最通用的方案，然后再使用特定于浏览器的技术增强该方案。</p>\n<a id=\"more\"></a>\n<h3 id=\"正则方法判断userAgent-用户代理检测\"><a href=\"#正则方法判断userAgent-用户代理检测\" class=\"headerlink\" title=\"正则方法判断userAgent(用户代理检测)\"></a>正则方法判断userAgent(用户代理检测)</h3><p>​        用户代理检测通过检测用户代理字符串来确定实际使用的浏览器。在每一次HTTP 请求过程中，用户代理字符串是作为响应首部发送的，而且该字符串可以通过JavaScript 的navigator.userAgent 属性访问。可以在控制台中直接输出查看。比如：</p>\n<ul>\n<li><blockquote>\n<p>Chrome：<code>&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36&quot;</code></p>\n</blockquote>\n</li>\n<li><blockquote>\n<p>Firefox:<code>&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:66.0) Gecko/20100101 Firefox/66.0&quot;</code> </p>\n</blockquote>\n</li>\n<li><blockquote>\n<p>IE:<code>&quot;Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)&quot;</code></p>\n</blockquote>\n<p>根据以上返回内容可以用正则的方法来判断浏览器的类型</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">navigator.sayswho= (function()&#123;</span><br><span class=\"line\">\tvar ua= navigator.userAgent, tem,</span><br><span class=\"line\">\tM= ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i) || [];</span><br><span class=\"line\">\tif(/trident/i.test(M[1]))&#123;</span><br><span class=\"line\">\t\ttem=  /\\brv[ :]+(\\d+)/g.exec(ua) || [];</span><br><span class=\"line\">\t\treturn &apos;IE &apos;+(tem[1] || &apos;&apos;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tif(M[1]=== &apos;Chrome&apos;)&#123;</span><br><span class=\"line\">\t\ttem= ua.match(/\\b(OPR|Edge)\\/(\\d+)/);</span><br><span class=\"line\">\t\tif(tem!= null) return tem.slice(1).join(&apos; &apos;).replace(&apos;OPR&apos;, &apos;Opera&apos;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tM= M[2]? [M[1], M[2]]: [navigator.appName, navigator.appVersion, &apos;-?&apos;];</span><br><span class=\"line\">\tif((tem= ua.match(/version\\/(\\d+)/i))!= null) M.splice(1, 1, tem[1]);</span><br><span class=\"line\">\treturn M.join(&apos; &apos;);</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n<p>​        同样的也可以用来判断设备类型mobile or pc</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function browserRedirect() &#123;</span><br><span class=\"line\">\tvar sUserAgent = navigator.userAgent.toLowerCase();</span><br><span class=\"line\">\tvar bIsIpad = sUserAgent.match(/ipad/i) == &quot;ipad&quot;;</span><br><span class=\"line\">\tvar bIsIphoneOs = sUserAgent.match(/iphone os/i) == &quot;iphone os&quot;;</span><br><span class=\"line\">\tvar bIsMidp = sUserAgent.match(/midp/i) == &quot;midp&quot;;</span><br><span class=\"line\">\tvar bIsUc7 = sUserAgent.match(/rv:1.2.3.4/i) == &quot;rv:1.2.3.4&quot;;</span><br><span class=\"line\">\tvar bIsUc = sUserAgent.match(/ucweb/i) == &quot;ucweb&quot;;</span><br><span class=\"line\">\tvar bIsAndroid = sUserAgent.match(/android/i) == &quot;android&quot;;</span><br><span class=\"line\">\tvar bIsCE = sUserAgent.match(/windows ce/i) == &quot;windows ce&quot;;</span><br><span class=\"line\">\tvar bIsWM = sUserAgent.match(/windows mobile/i) == &quot;windows mobile&quot;;</span><br><span class=\"line\">\tdocument.writeln(&quot;您的浏览设备为：&quot;);</span><br><span class=\"line\">\tif (bIsIpad || bIsIphoneOs || bIsMidp || bIsUc7 || bIsUc || bIsAndroid || bIsCE || bIsWM) &#123;</span><br><span class=\"line\">\t\tdocument.writeln(&quot;phone&quot;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">browserRedirect();</span><br></pre></td></tr></table></figure>\n<p>​        在服务器端，通过检测用户代理字符串来确定用户使用的浏览器是一种常用而且广为接受的做法。而在客户端，用户代理检测一般被当作一种<strong>万不得已才用的做法</strong>，其优先级排在能力检测之后。</p>\n<h3 id=\"能力检测\"><a href=\"#能力检测\" class=\"headerlink\" title=\"能力检测\"></a>能力检测</h3><p>​        能力检测的目标不是识别特定的浏览器，而是识别浏览器的能力。采用这种方式不必顾及特定的浏览器如何如何，只要确定浏览器支持特定的能力，就可以给出解决方案。</p>\n<p>​        以下代码段针对不同浏览器的特有属性或方法实习了能力检测。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// Opera 8.0+ (UA detection to detect Blink/v8-powered Opera)</span><br><span class=\"line\">var isOpera = !!window.opera || navigator.userAgent.indexOf(&apos; OPR/&apos;) &gt;= 0;</span><br><span class=\"line\">// Firefox 1.0+</span><br><span class=\"line\">var isFirefox = typeof InstallTrigger !== &apos;undefined&apos;;   </span><br><span class=\"line\">// At least Safari 3+: &quot;[object HTMLElementConstructor]&quot;</span><br><span class=\"line\">var isSafari = Object.prototype.toString.call(window.HTMLElement).indexOf(&apos;Constructor&apos;) &gt; 0;</span><br><span class=\"line\">// Chrome 1+</span><br><span class=\"line\">var isChrome = !!window.chrome &amp;&amp; !isOpera;              </span><br><span class=\"line\">// At least IE6，</span><br><span class=\"line\">//&apos;document.documentMode&apos; returns version number of ie.</span><br><span class=\"line\">var isIE = /*@cc_on!@*/false || !!document.documentMode;   </span><br><span class=\"line\"></span><br><span class=\"line\">var output = &apos;Detecting browsers by ducktyping:&lt;hr&gt;&apos;;</span><br><span class=\"line\">output += &apos;isFirefox: &apos; + isFirefox + &apos;&lt;br&gt;&apos;;</span><br><span class=\"line\">output += &apos;isChrome: &apos; + isChrome + &apos;&lt;br&gt;&apos;;</span><br><span class=\"line\">output += &apos;isSafari: &apos; + isSafari + &apos;&lt;br&gt;&apos;;</span><br><span class=\"line\">output += &apos;isOpera: &apos; + isOpera + &apos;&lt;br&gt;&apos;;</span><br><span class=\"line\">output += &apos;isIE: &apos; + isIE + &apos;&lt;br&gt;&apos;;</span><br><span class=\"line\">document.body.innerHTML = output;</span><br></pre></td></tr></table></figure>\n<h3 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h3><p>​        最后补充两个针对IE10及以下版本的检测代码，提供多个选择：</p>\n<p>1.利用IE10及以下独有属性ActiveXObject判断。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//ie10及以下</span><br><span class=\"line\">function()&#123;</span><br><span class=\"line\">\tif (window.ActiveXObject) &#123;</span><br><span class=\"line\">\t\t//coding......</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>2.利用<code>&lt;!--[if IE 9]&gt;&lt;![endif]--&gt;</code>这样的判断语句来判断浏览器版本，只能适用于IE10以下版本。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var isIE = function (ver) &#123;</span><br><span class=\"line\">\tvar b = document.createElement(&apos;b&apos;);</span><br><span class=\"line\">\tb.innerHTML = &apos;&lt;!--[if IE &apos; + ver + &apos;]&gt;&lt;i&gt;&lt;/i&gt;&lt;![endif]--&gt;&apos;;</span><br><span class=\"line\">\treturn b.getElementsByTagName(&apos;i&apos;).length === 1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">if (isIE(9)) &#123;</span><br><span class=\"line\">\t//coding...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>​        迄今为止，客户端检测仍然是Web 开发领域中一个饱受争议的话题。一谈到这个话题，人们总会不约而同地提到浏览器应该支持一组最常用的公共功能。在理想状态下，确实应该如此。检测Web 客户端的手段很多，而且各有利弊。但最重要的还是要知道，<strong>不到万不得已，就不要使用客户端检测。只要能找到更通用的方法，就应该优先采用更通用的方法。</strong>一言以蔽之，先设计最通用的方案，然后再使用特定于浏览器的技术增强该方案。</p>","more":"<h3 id=\"正则方法判断userAgent-用户代理检测\"><a href=\"#正则方法判断userAgent-用户代理检测\" class=\"headerlink\" title=\"正则方法判断userAgent(用户代理检测)\"></a>正则方法判断userAgent(用户代理检测)</h3><p>​        用户代理检测通过检测用户代理字符串来确定实际使用的浏览器。在每一次HTTP 请求过程中，用户代理字符串是作为响应首部发送的，而且该字符串可以通过JavaScript 的navigator.userAgent 属性访问。可以在控制台中直接输出查看。比如：</p>\n<ul>\n<li><blockquote>\n<p>Chrome：<code>&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36&quot;</code></p>\n</blockquote>\n</li>\n<li><blockquote>\n<p>Firefox:<code>&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:66.0) Gecko/20100101 Firefox/66.0&quot;</code> </p>\n</blockquote>\n</li>\n<li><blockquote>\n<p>IE:<code>&quot;Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)&quot;</code></p>\n</blockquote>\n<p>根据以上返回内容可以用正则的方法来判断浏览器的类型</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">navigator.sayswho= (function()&#123;</span><br><span class=\"line\">\tvar ua= navigator.userAgent, tem,</span><br><span class=\"line\">\tM= ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i) || [];</span><br><span class=\"line\">\tif(/trident/i.test(M[1]))&#123;</span><br><span class=\"line\">\t\ttem=  /\\brv[ :]+(\\d+)/g.exec(ua) || [];</span><br><span class=\"line\">\t\treturn &apos;IE &apos;+(tem[1] || &apos;&apos;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tif(M[1]=== &apos;Chrome&apos;)&#123;</span><br><span class=\"line\">\t\ttem= ua.match(/\\b(OPR|Edge)\\/(\\d+)/);</span><br><span class=\"line\">\t\tif(tem!= null) return tem.slice(1).join(&apos; &apos;).replace(&apos;OPR&apos;, &apos;Opera&apos;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tM= M[2]? [M[1], M[2]]: [navigator.appName, navigator.appVersion, &apos;-?&apos;];</span><br><span class=\"line\">\tif((tem= ua.match(/version\\/(\\d+)/i))!= null) M.splice(1, 1, tem[1]);</span><br><span class=\"line\">\treturn M.join(&apos; &apos;);</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n<p>​        同样的也可以用来判断设备类型mobile or pc</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function browserRedirect() &#123;</span><br><span class=\"line\">\tvar sUserAgent = navigator.userAgent.toLowerCase();</span><br><span class=\"line\">\tvar bIsIpad = sUserAgent.match(/ipad/i) == &quot;ipad&quot;;</span><br><span class=\"line\">\tvar bIsIphoneOs = sUserAgent.match(/iphone os/i) == &quot;iphone os&quot;;</span><br><span class=\"line\">\tvar bIsMidp = sUserAgent.match(/midp/i) == &quot;midp&quot;;</span><br><span class=\"line\">\tvar bIsUc7 = sUserAgent.match(/rv:1.2.3.4/i) == &quot;rv:1.2.3.4&quot;;</span><br><span class=\"line\">\tvar bIsUc = sUserAgent.match(/ucweb/i) == &quot;ucweb&quot;;</span><br><span class=\"line\">\tvar bIsAndroid = sUserAgent.match(/android/i) == &quot;android&quot;;</span><br><span class=\"line\">\tvar bIsCE = sUserAgent.match(/windows ce/i) == &quot;windows ce&quot;;</span><br><span class=\"line\">\tvar bIsWM = sUserAgent.match(/windows mobile/i) == &quot;windows mobile&quot;;</span><br><span class=\"line\">\tdocument.writeln(&quot;您的浏览设备为：&quot;);</span><br><span class=\"line\">\tif (bIsIpad || bIsIphoneOs || bIsMidp || bIsUc7 || bIsUc || bIsAndroid || bIsCE || bIsWM) &#123;</span><br><span class=\"line\">\t\tdocument.writeln(&quot;phone&quot;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">browserRedirect();</span><br></pre></td></tr></table></figure>\n<p>​        在服务器端，通过检测用户代理字符串来确定用户使用的浏览器是一种常用而且广为接受的做法。而在客户端，用户代理检测一般被当作一种<strong>万不得已才用的做法</strong>，其优先级排在能力检测之后。</p>\n<h3 id=\"能力检测\"><a href=\"#能力检测\" class=\"headerlink\" title=\"能力检测\"></a>能力检测</h3><p>​        能力检测的目标不是识别特定的浏览器，而是识别浏览器的能力。采用这种方式不必顾及特定的浏览器如何如何，只要确定浏览器支持特定的能力，就可以给出解决方案。</p>\n<p>​        以下代码段针对不同浏览器的特有属性或方法实习了能力检测。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// Opera 8.0+ (UA detection to detect Blink/v8-powered Opera)</span><br><span class=\"line\">var isOpera = !!window.opera || navigator.userAgent.indexOf(&apos; OPR/&apos;) &gt;= 0;</span><br><span class=\"line\">// Firefox 1.0+</span><br><span class=\"line\">var isFirefox = typeof InstallTrigger !== &apos;undefined&apos;;   </span><br><span class=\"line\">// At least Safari 3+: &quot;[object HTMLElementConstructor]&quot;</span><br><span class=\"line\">var isSafari = Object.prototype.toString.call(window.HTMLElement).indexOf(&apos;Constructor&apos;) &gt; 0;</span><br><span class=\"line\">// Chrome 1+</span><br><span class=\"line\">var isChrome = !!window.chrome &amp;&amp; !isOpera;              </span><br><span class=\"line\">// At least IE6，</span><br><span class=\"line\">//&apos;document.documentMode&apos; returns version number of ie.</span><br><span class=\"line\">var isIE = /*@cc_on!@*/false || !!document.documentMode;   </span><br><span class=\"line\"></span><br><span class=\"line\">var output = &apos;Detecting browsers by ducktyping:&lt;hr&gt;&apos;;</span><br><span class=\"line\">output += &apos;isFirefox: &apos; + isFirefox + &apos;&lt;br&gt;&apos;;</span><br><span class=\"line\">output += &apos;isChrome: &apos; + isChrome + &apos;&lt;br&gt;&apos;;</span><br><span class=\"line\">output += &apos;isSafari: &apos; + isSafari + &apos;&lt;br&gt;&apos;;</span><br><span class=\"line\">output += &apos;isOpera: &apos; + isOpera + &apos;&lt;br&gt;&apos;;</span><br><span class=\"line\">output += &apos;isIE: &apos; + isIE + &apos;&lt;br&gt;&apos;;</span><br><span class=\"line\">document.body.innerHTML = output;</span><br></pre></td></tr></table></figure>\n<h3 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h3><p>​        最后补充两个针对IE10及以下版本的检测代码，提供多个选择：</p>\n<p>1.利用IE10及以下独有属性ActiveXObject判断。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//ie10及以下</span><br><span class=\"line\">function()&#123;</span><br><span class=\"line\">\tif (window.ActiveXObject) &#123;</span><br><span class=\"line\">\t\t//coding......</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>2.利用<code>&lt;!--[if IE 9]&gt;&lt;![endif]--&gt;</code>这样的判断语句来判断浏览器版本，只能适用于IE10以下版本。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var isIE = function (ver) &#123;</span><br><span class=\"line\">\tvar b = document.createElement(&apos;b&apos;);</span><br><span class=\"line\">\tb.innerHTML = &apos;&lt;!--[if IE &apos; + ver + &apos;]&gt;&lt;i&gt;&lt;/i&gt;&lt;![endif]--&gt;&apos;;</span><br><span class=\"line\">\treturn b.getElementsByTagName(&apos;i&apos;).length === 1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">if (isIE(9)) &#123;</span><br><span class=\"line\">\t//coding...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"js数组和字符串对象常用方法总结","date":"2016-09-10T14:53:07.000Z","_content":"　　总结下js中数组和字符串的常用方法。有几个方法总是记混，没办法，英语差，而且对于返回值和是否改变原数组也一直掌握不牢。\n### Array\n#### array.concat(item...)\n\nconcant方法产生一个新数组，它包含一份array的浅复制(shallow copy)并把一个或多个参数item附加在其后。如果item是一个数组，那么它的每个元素会被分别添加。\n\n```\nvar a = ['a','b','c'];\nvar b = ['x','y','z'];\nvar c = a.concat(b, true);\n//c 变成 ['a','b','c','x','y','z',true]\n//数组a 和 b不变\n```\n<!-- more -->\n#### array.join(separator)\njoin方法把一个array构造成一个字符串——就是数组转字符串。它先把array中的每个元素构造成一个字符串，接着用一个separator分隔符把它们链接在一起。默认的separator是逗号','。要想做到无间隔的链接，可以使用空字符串作为separator。\n\n```\nvar a = ['a','b','c'];\nvar b = a.join();\nvar c = a.join('');\nvar d = a.join(',');\n//b和d都是'a,b,c'\n//c是'abc'\n//a不变\n```\n#### array.pop()\npop和push方法使得array可以像堆栈(stack)一样工作。pop方法移除array中的最后一个元素并返回改元素。如果array是empty，则返回undefined。\n\n```\nvar a = ['a','b','c'];\nvar c = a.pop();\n//c 是 'c'\n//a 变成['a','b']\n```\npop可以像这样实现：\n\n```\nArray.method('pop', function() {\n    return this.splice(this.length - 1, 1)[0];\n});\n```\n\n#### array.push(item...)\npush方法把一个或多个参数item附加到一个数组的尾部。和concat方法不同的是，它会修改array，如果参数item是一个数组，它会把参数数组作为单个元素整个添加到数组中，并返回整个array的新长度值。\n\n```\nvar a = ['a','b','c'];\nvar b = ['x','y','z'];\nvar c = a.push(b, true);\n//a 变为 ['a','b','c',['x','y','z'], true]\n//b不变，c为5\n```\npush可以像这样实现：\n\n```\nArray.method('push', function() {\n    this.splice.apply(\n        this,\n        [this.length, 0].concat(Array.prototype.slice.apply(aruguments));\n        return this.length;\n    );\n});\n```\n#### array.reverse()\nreverse方法反转array里的元素的顺序，并返回array本身：\n\n```\nvar a = ['a','b','c'];\nvar b = a.reverse();\n//a和b都是['c','b','a']\n```\n#### array.shift()\nshift方法移除数组array中的第一个元素并返回该元素。如果这个数组array是空的，它会返回undefined。shift通常比pop慢的多：\n\n```\nvar a = ['a','b','c'];\nvar c = a.shift();\n//a变为['b','c']\n//c是'a'\n```\nshift可以这样实现：\n\n```\nArray.method('shift', function() {\n    return this.splice(0, 1)[0];\n});\n```\n#### array.unshift(item...)\nunshift方法像push方法一样，用于把元素添加到数组中。但它是吧item插入到array的开始。返回array新的length：\n\n```\nvar a = ['a','b','c'];\nvar r = a.unshift('?','@');\n//a变为['?','@','a','b','c']\n//r为5\n```\nunshift可以这样实现：\n\n```\nArray.method('unshift', function () {\n    this.splice.apply(\n        this,\n        [0, 0].concat(Array.prototype.slice.apply(arguments));\n        return this.length;\n    );\n});\n```\n#### array.slice(start, end)\nslice方法对array中的一段做浅复制。首先复制array[start],一直复制到array[end]为止。end参数是可选的，默认值为该数组的长度array.length。如果两个参数中的任何一个是负数，array.length会和他们相加，试图让它们成为非负数。如果start大于等于array.length，得到的结果将是一个新的空数组。\n**注意：千万别把slice和splice弄混了。字符串中也有一个同名方法：string.slice()**\n\n```\nvar a = ['a','b','c'];\nvar b = a.slice(0,1);  //b为['a']\nvar c = a.slice(1);    //c为['b','c']\nvar d = a.slice(1,2);  //d为['b']\n//a不变\n```\n#### array.splice(start, deleteCount, item...)\nsplice方法从array中移除一个或多个元素，并用新的item替换它们。start是从array中移除元素的开始位置。deleteCount是要移除的元素个数。它返回一个包含被移除元素的数组。\n**splice的最主要用处是从一个数组中删除元素。千万不要和slice弄混了**\n\n```\nvar a = ['a','b','c'];\nvar r = a.splice(1,1,'ache','bug');\n//a变为['a','ache','bug','c']\n//r为['b']\n```\n#### array.sort(comparefn)\nsort方法对array中的内容进行排序。这货还是少用为妙。\n\n---\n### String\n#### string.charAt(pos)\ncharAt方法返回在string中pos位置处的字符。如果pos小于0或者大于等于字符串的长度string.length，则返回空字符串。\n\n```\nvar name = 'Curly';\nvar initial = name.charAt(0);\n//initial是'C‘\n```\n#### string.charCodeAt(pos)\n与charAty一样，不过返回的是字符码位。如果pos小于0或者大于等于字符串长度，则返回NaN。\n```\nvar name = 'Curly';\nvar initial = name.charCodeAt(0);\n//initial是67\n```\n#### string.concat(item...)\n链接两个字符串，没什么鸟用。直接用’+‘省时省力。\n#### string.indexOf(searchString, position)\nindexOf方法在string内查找另一个字符串searchString。如果被找到，返回第一个匹配字符的位置，否则返回-1。可选参数position可设置从string的某个指定的位置开始查找：\n\n```\nvar text = 'Mississippi';\nvar p = text.indexOf('ss')   //p是2\np = text.indexOf('ss', 3)    //p是5\np = text.indexOf('ss', 6)    //p是-1\n```\n#### string.lastIndexOf(searchString, position)\nlastIndexOf方法和indexOf方法类似，只不过是从该字符串的末尾开始查找：\n\n```\nvar text = 'Mississippi';\nvar p = text.lastIndexOf('ss')   //p是5\np = text.lastIndexOf('ss', 3)    //p是2\np = text.lastIndexOf('ss', 6)    //p是5\n```\n#### string.slice(start, end)\nslice方法复制string的一部分来构造一个新的字符串。如果start参数是负数，它将与string。length相加。end是可选的，默认值为string.length。如果end参数是负数，那么它将与string.length相加。end参数等于你要取得最后一个字符的位置值加上1.\n\n```\nvar text = 'and in it he says \"Any damn fool could\"';\nvar a = text.slice(18);\n//a为'\"Any damn fool could\"'\nvar b = text.slice(0,3);\n//b为’and‘\nvar c = text.slice(-5);\n//c为'could'\n```\n#### string.substring(start, end)\n与slice方法一样。没有任何理由使用它，直接用slice。\n#### string.toLowerCase() && string.toUpperCase()\n没啥可说的，返回一个新的字符串，实现大小写转换\n#### string.split(separator, limit)\nsplit方法把string分割成片段来创建一个字符串数组——字符串转数组。可选参数limit可以限制被分割的片段数量。separator参数可以是一个字符串或一个正则表达式。\n如果separator是一个空字符，会返回一个单字符的数组：\n\n```\nvar digits = '0123456789';\nvar a = digits.split('',5);\n// a 为['0','1','2','3','4']\n```\n否则，此方法会在string中查找所有separator出现的地方，分隔符两边的两个单元文本会被复制到改数组中。此方法忽略g标识：\n\n```\nvar ip = '192.168.1.0';\nvar b = ip('.');\n//b为['192','168','1','0']\n\nvar c = '|a|b|c|'.split('|');\n// c为['','a','b','c','']\n```\n当sparator时一个正则表达式时，现代浏览器会在输出的数组中排除掉空字符串：\n\n```\nvar f = '|a|b|c|'.split(/\\|/);\n//f为['a','b','c']\n```\n---\narray和string常用方法就先总结到这里。当然有没列出来的方法，不过工作中很少用。string中有关regExp的方法一律没写，那些还是~~拖到~~正则表达式的有关文章里再写吧（围笑。\n\n*<small>参考书籍：[《JavaScript语言精粹》，JavaScript:The Good Parts，作者: Douglas Crockford ](https://book.douban.com/subject/3590768/)*\n\n\n","source":"_posts/数组和字符串对象方法总结.md","raw":"---\ntitle: js数组和字符串对象常用方法总结\ndate: 2016-09-10 22:53:07\ncategories: JS\ntags:\n---\n　　总结下js中数组和字符串的常用方法。有几个方法总是记混，没办法，英语差，而且对于返回值和是否改变原数组也一直掌握不牢。\n### Array\n#### array.concat(item...)\n\nconcant方法产生一个新数组，它包含一份array的浅复制(shallow copy)并把一个或多个参数item附加在其后。如果item是一个数组，那么它的每个元素会被分别添加。\n\n```\nvar a = ['a','b','c'];\nvar b = ['x','y','z'];\nvar c = a.concat(b, true);\n//c 变成 ['a','b','c','x','y','z',true]\n//数组a 和 b不变\n```\n<!-- more -->\n#### array.join(separator)\njoin方法把一个array构造成一个字符串——就是数组转字符串。它先把array中的每个元素构造成一个字符串，接着用一个separator分隔符把它们链接在一起。默认的separator是逗号','。要想做到无间隔的链接，可以使用空字符串作为separator。\n\n```\nvar a = ['a','b','c'];\nvar b = a.join();\nvar c = a.join('');\nvar d = a.join(',');\n//b和d都是'a,b,c'\n//c是'abc'\n//a不变\n```\n#### array.pop()\npop和push方法使得array可以像堆栈(stack)一样工作。pop方法移除array中的最后一个元素并返回改元素。如果array是empty，则返回undefined。\n\n```\nvar a = ['a','b','c'];\nvar c = a.pop();\n//c 是 'c'\n//a 变成['a','b']\n```\npop可以像这样实现：\n\n```\nArray.method('pop', function() {\n    return this.splice(this.length - 1, 1)[0];\n});\n```\n\n#### array.push(item...)\npush方法把一个或多个参数item附加到一个数组的尾部。和concat方法不同的是，它会修改array，如果参数item是一个数组，它会把参数数组作为单个元素整个添加到数组中，并返回整个array的新长度值。\n\n```\nvar a = ['a','b','c'];\nvar b = ['x','y','z'];\nvar c = a.push(b, true);\n//a 变为 ['a','b','c',['x','y','z'], true]\n//b不变，c为5\n```\npush可以像这样实现：\n\n```\nArray.method('push', function() {\n    this.splice.apply(\n        this,\n        [this.length, 0].concat(Array.prototype.slice.apply(aruguments));\n        return this.length;\n    );\n});\n```\n#### array.reverse()\nreverse方法反转array里的元素的顺序，并返回array本身：\n\n```\nvar a = ['a','b','c'];\nvar b = a.reverse();\n//a和b都是['c','b','a']\n```\n#### array.shift()\nshift方法移除数组array中的第一个元素并返回该元素。如果这个数组array是空的，它会返回undefined。shift通常比pop慢的多：\n\n```\nvar a = ['a','b','c'];\nvar c = a.shift();\n//a变为['b','c']\n//c是'a'\n```\nshift可以这样实现：\n\n```\nArray.method('shift', function() {\n    return this.splice(0, 1)[0];\n});\n```\n#### array.unshift(item...)\nunshift方法像push方法一样，用于把元素添加到数组中。但它是吧item插入到array的开始。返回array新的length：\n\n```\nvar a = ['a','b','c'];\nvar r = a.unshift('?','@');\n//a变为['?','@','a','b','c']\n//r为5\n```\nunshift可以这样实现：\n\n```\nArray.method('unshift', function () {\n    this.splice.apply(\n        this,\n        [0, 0].concat(Array.prototype.slice.apply(arguments));\n        return this.length;\n    );\n});\n```\n#### array.slice(start, end)\nslice方法对array中的一段做浅复制。首先复制array[start],一直复制到array[end]为止。end参数是可选的，默认值为该数组的长度array.length。如果两个参数中的任何一个是负数，array.length会和他们相加，试图让它们成为非负数。如果start大于等于array.length，得到的结果将是一个新的空数组。\n**注意：千万别把slice和splice弄混了。字符串中也有一个同名方法：string.slice()**\n\n```\nvar a = ['a','b','c'];\nvar b = a.slice(0,1);  //b为['a']\nvar c = a.slice(1);    //c为['b','c']\nvar d = a.slice(1,2);  //d为['b']\n//a不变\n```\n#### array.splice(start, deleteCount, item...)\nsplice方法从array中移除一个或多个元素，并用新的item替换它们。start是从array中移除元素的开始位置。deleteCount是要移除的元素个数。它返回一个包含被移除元素的数组。\n**splice的最主要用处是从一个数组中删除元素。千万不要和slice弄混了**\n\n```\nvar a = ['a','b','c'];\nvar r = a.splice(1,1,'ache','bug');\n//a变为['a','ache','bug','c']\n//r为['b']\n```\n#### array.sort(comparefn)\nsort方法对array中的内容进行排序。这货还是少用为妙。\n\n---\n### String\n#### string.charAt(pos)\ncharAt方法返回在string中pos位置处的字符。如果pos小于0或者大于等于字符串的长度string.length，则返回空字符串。\n\n```\nvar name = 'Curly';\nvar initial = name.charAt(0);\n//initial是'C‘\n```\n#### string.charCodeAt(pos)\n与charAty一样，不过返回的是字符码位。如果pos小于0或者大于等于字符串长度，则返回NaN。\n```\nvar name = 'Curly';\nvar initial = name.charCodeAt(0);\n//initial是67\n```\n#### string.concat(item...)\n链接两个字符串，没什么鸟用。直接用’+‘省时省力。\n#### string.indexOf(searchString, position)\nindexOf方法在string内查找另一个字符串searchString。如果被找到，返回第一个匹配字符的位置，否则返回-1。可选参数position可设置从string的某个指定的位置开始查找：\n\n```\nvar text = 'Mississippi';\nvar p = text.indexOf('ss')   //p是2\np = text.indexOf('ss', 3)    //p是5\np = text.indexOf('ss', 6)    //p是-1\n```\n#### string.lastIndexOf(searchString, position)\nlastIndexOf方法和indexOf方法类似，只不过是从该字符串的末尾开始查找：\n\n```\nvar text = 'Mississippi';\nvar p = text.lastIndexOf('ss')   //p是5\np = text.lastIndexOf('ss', 3)    //p是2\np = text.lastIndexOf('ss', 6)    //p是5\n```\n#### string.slice(start, end)\nslice方法复制string的一部分来构造一个新的字符串。如果start参数是负数，它将与string。length相加。end是可选的，默认值为string.length。如果end参数是负数，那么它将与string.length相加。end参数等于你要取得最后一个字符的位置值加上1.\n\n```\nvar text = 'and in it he says \"Any damn fool could\"';\nvar a = text.slice(18);\n//a为'\"Any damn fool could\"'\nvar b = text.slice(0,3);\n//b为’and‘\nvar c = text.slice(-5);\n//c为'could'\n```\n#### string.substring(start, end)\n与slice方法一样。没有任何理由使用它，直接用slice。\n#### string.toLowerCase() && string.toUpperCase()\n没啥可说的，返回一个新的字符串，实现大小写转换\n#### string.split(separator, limit)\nsplit方法把string分割成片段来创建一个字符串数组——字符串转数组。可选参数limit可以限制被分割的片段数量。separator参数可以是一个字符串或一个正则表达式。\n如果separator是一个空字符，会返回一个单字符的数组：\n\n```\nvar digits = '0123456789';\nvar a = digits.split('',5);\n// a 为['0','1','2','3','4']\n```\n否则，此方法会在string中查找所有separator出现的地方，分隔符两边的两个单元文本会被复制到改数组中。此方法忽略g标识：\n\n```\nvar ip = '192.168.1.0';\nvar b = ip('.');\n//b为['192','168','1','0']\n\nvar c = '|a|b|c|'.split('|');\n// c为['','a','b','c','']\n```\n当sparator时一个正则表达式时，现代浏览器会在输出的数组中排除掉空字符串：\n\n```\nvar f = '|a|b|c|'.split(/\\|/);\n//f为['a','b','c']\n```\n---\narray和string常用方法就先总结到这里。当然有没列出来的方法，不过工作中很少用。string中有关regExp的方法一律没写，那些还是~~拖到~~正则表达式的有关文章里再写吧（围笑。\n\n*<small>参考书籍：[《JavaScript语言精粹》，JavaScript:The Good Parts，作者: Douglas Crockford ](https://book.douban.com/subject/3590768/)*\n\n\n","slug":"数组和字符串对象方法总结","published":1,"updated":"2018-06-19T08:14:01.485Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxbjwoi60006zwuc778ys8nu","content":"<p>　　总结下js中数组和字符串的常用方法。有几个方法总是记混，没办法，英语差，而且对于返回值和是否改变原数组也一直掌握不牢。</p>\n<h3 id=\"Array\"><a href=\"#Array\" class=\"headerlink\" title=\"Array\"></a>Array</h3><h4 id=\"array-concat-item…\"><a href=\"#array-concat-item…\" class=\"headerlink\" title=\"array.concat(item…)\"></a>array.concat(item…)</h4><p>concant方法产生一个新数组，它包含一份array的浅复制(shallow copy)并把一个或多个参数item附加在其后。如果item是一个数组，那么它的每个元素会被分别添加。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var a = [&apos;a&apos;,&apos;b&apos;,&apos;c&apos;];</span><br><span class=\"line\">var b = [&apos;x&apos;,&apos;y&apos;,&apos;z&apos;];</span><br><span class=\"line\">var c = a.concat(b, true);</span><br><span class=\"line\">//c 变成 [&apos;a&apos;,&apos;b&apos;,&apos;c&apos;,&apos;x&apos;,&apos;y&apos;,&apos;z&apos;,true]</span><br><span class=\"line\">//数组a 和 b不变</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h4 id=\"array-join-separator\"><a href=\"#array-join-separator\" class=\"headerlink\" title=\"array.join(separator)\"></a>array.join(separator)</h4><p>join方法把一个array构造成一个字符串——就是数组转字符串。它先把array中的每个元素构造成一个字符串，接着用一个separator分隔符把它们链接在一起。默认的separator是逗号’,’。要想做到无间隔的链接，可以使用空字符串作为separator。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var a = [&apos;a&apos;,&apos;b&apos;,&apos;c&apos;];</span><br><span class=\"line\">var b = a.join();</span><br><span class=\"line\">var c = a.join(&apos;&apos;);</span><br><span class=\"line\">var d = a.join(&apos;,&apos;);</span><br><span class=\"line\">//b和d都是&apos;a,b,c&apos;</span><br><span class=\"line\">//c是&apos;abc&apos;</span><br><span class=\"line\">//a不变</span><br></pre></td></tr></table></figure>\n<h4 id=\"array-pop\"><a href=\"#array-pop\" class=\"headerlink\" title=\"array.pop()\"></a>array.pop()</h4><p>pop和push方法使得array可以像堆栈(stack)一样工作。pop方法移除array中的最后一个元素并返回改元素。如果array是empty，则返回undefined。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var a = [&apos;a&apos;,&apos;b&apos;,&apos;c&apos;];</span><br><span class=\"line\">var c = a.pop();</span><br><span class=\"line\">//c 是 &apos;c&apos;</span><br><span class=\"line\">//a 变成[&apos;a&apos;,&apos;b&apos;]</span><br></pre></td></tr></table></figure>\n<p>pop可以像这样实现：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Array.method(&apos;pop&apos;, function() &#123;</span><br><span class=\"line\">    return this.splice(this.length - 1, 1)[0];</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"array-push-item…\"><a href=\"#array-push-item…\" class=\"headerlink\" title=\"array.push(item…)\"></a>array.push(item…)</h4><p>push方法把一个或多个参数item附加到一个数组的尾部。和concat方法不同的是，它会修改array，如果参数item是一个数组，它会把参数数组作为单个元素整个添加到数组中，并返回整个array的新长度值。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var a = [&apos;a&apos;,&apos;b&apos;,&apos;c&apos;];</span><br><span class=\"line\">var b = [&apos;x&apos;,&apos;y&apos;,&apos;z&apos;];</span><br><span class=\"line\">var c = a.push(b, true);</span><br><span class=\"line\">//a 变为 [&apos;a&apos;,&apos;b&apos;,&apos;c&apos;,[&apos;x&apos;,&apos;y&apos;,&apos;z&apos;], true]</span><br><span class=\"line\">//b不变，c为5</span><br></pre></td></tr></table></figure>\n<p>push可以像这样实现：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Array.method(&apos;push&apos;, function() &#123;</span><br><span class=\"line\">    this.splice.apply(</span><br><span class=\"line\">        this,</span><br><span class=\"line\">        [this.length, 0].concat(Array.prototype.slice.apply(aruguments));</span><br><span class=\"line\">        return this.length;</span><br><span class=\"line\">    );</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"array-reverse\"><a href=\"#array-reverse\" class=\"headerlink\" title=\"array.reverse()\"></a>array.reverse()</h4><p>reverse方法反转array里的元素的顺序，并返回array本身：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var a = [&apos;a&apos;,&apos;b&apos;,&apos;c&apos;];</span><br><span class=\"line\">var b = a.reverse();</span><br><span class=\"line\">//a和b都是[&apos;c&apos;,&apos;b&apos;,&apos;a&apos;]</span><br></pre></td></tr></table></figure>\n<h4 id=\"array-shift\"><a href=\"#array-shift\" class=\"headerlink\" title=\"array.shift()\"></a>array.shift()</h4><p>shift方法移除数组array中的第一个元素并返回该元素。如果这个数组array是空的，它会返回undefined。shift通常比pop慢的多：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var a = [&apos;a&apos;,&apos;b&apos;,&apos;c&apos;];</span><br><span class=\"line\">var c = a.shift();</span><br><span class=\"line\">//a变为[&apos;b&apos;,&apos;c&apos;]</span><br><span class=\"line\">//c是&apos;a&apos;</span><br></pre></td></tr></table></figure>\n<p>shift可以这样实现：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Array.method(&apos;shift&apos;, function() &#123;</span><br><span class=\"line\">    return this.splice(0, 1)[0];</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"array-unshift-item…\"><a href=\"#array-unshift-item…\" class=\"headerlink\" title=\"array.unshift(item…)\"></a>array.unshift(item…)</h4><p>unshift方法像push方法一样，用于把元素添加到数组中。但它是吧item插入到array的开始。返回array新的length：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var a = [&apos;a&apos;,&apos;b&apos;,&apos;c&apos;];</span><br><span class=\"line\">var r = a.unshift(&apos;?&apos;,&apos;@&apos;);</span><br><span class=\"line\">//a变为[&apos;?&apos;,&apos;@&apos;,&apos;a&apos;,&apos;b&apos;,&apos;c&apos;]</span><br><span class=\"line\">//r为5</span><br></pre></td></tr></table></figure>\n<p>unshift可以这样实现：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Array.method(&apos;unshift&apos;, function () &#123;</span><br><span class=\"line\">    this.splice.apply(</span><br><span class=\"line\">        this,</span><br><span class=\"line\">        [0, 0].concat(Array.prototype.slice.apply(arguments));</span><br><span class=\"line\">        return this.length;</span><br><span class=\"line\">    );</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"array-slice-start-end\"><a href=\"#array-slice-start-end\" class=\"headerlink\" title=\"array.slice(start, end)\"></a>array.slice(start, end)</h4><p>slice方法对array中的一段做浅复制。首先复制array[start],一直复制到array[end]为止。end参数是可选的，默认值为该数组的长度array.length。如果两个参数中的任何一个是负数，array.length会和他们相加，试图让它们成为非负数。如果start大于等于array.length，得到的结果将是一个新的空数组。<br><strong>注意：千万别把slice和splice弄混了。字符串中也有一个同名方法：string.slice()</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var a = [&apos;a&apos;,&apos;b&apos;,&apos;c&apos;];</span><br><span class=\"line\">var b = a.slice(0,1);  //b为[&apos;a&apos;]</span><br><span class=\"line\">var c = a.slice(1);    //c为[&apos;b&apos;,&apos;c&apos;]</span><br><span class=\"line\">var d = a.slice(1,2);  //d为[&apos;b&apos;]</span><br><span class=\"line\">//a不变</span><br></pre></td></tr></table></figure>\n<h4 id=\"array-splice-start-deleteCount-item…\"><a href=\"#array-splice-start-deleteCount-item…\" class=\"headerlink\" title=\"array.splice(start, deleteCount, item…)\"></a>array.splice(start, deleteCount, item…)</h4><p>splice方法从array中移除一个或多个元素，并用新的item替换它们。start是从array中移除元素的开始位置。deleteCount是要移除的元素个数。它返回一个包含被移除元素的数组。<br><strong>splice的最主要用处是从一个数组中删除元素。千万不要和slice弄混了</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var a = [&apos;a&apos;,&apos;b&apos;,&apos;c&apos;];</span><br><span class=\"line\">var r = a.splice(1,1,&apos;ache&apos;,&apos;bug&apos;);</span><br><span class=\"line\">//a变为[&apos;a&apos;,&apos;ache&apos;,&apos;bug&apos;,&apos;c&apos;]</span><br><span class=\"line\">//r为[&apos;b&apos;]</span><br></pre></td></tr></table></figure>\n<h4 id=\"array-sort-comparefn\"><a href=\"#array-sort-comparefn\" class=\"headerlink\" title=\"array.sort(comparefn)\"></a>array.sort(comparefn)</h4><p>sort方法对array中的内容进行排序。这货还是少用为妙。</p>\n<hr>\n<h3 id=\"String\"><a href=\"#String\" class=\"headerlink\" title=\"String\"></a>String</h3><h4 id=\"string-charAt-pos\"><a href=\"#string-charAt-pos\" class=\"headerlink\" title=\"string.charAt(pos)\"></a>string.charAt(pos)</h4><p>charAt方法返回在string中pos位置处的字符。如果pos小于0或者大于等于字符串的长度string.length，则返回空字符串。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var name = &apos;Curly&apos;;</span><br><span class=\"line\">var initial = name.charAt(0);</span><br><span class=\"line\">//initial是&apos;C‘</span><br></pre></td></tr></table></figure>\n<h4 id=\"string-charCodeAt-pos\"><a href=\"#string-charCodeAt-pos\" class=\"headerlink\" title=\"string.charCodeAt(pos)\"></a>string.charCodeAt(pos)</h4><p>与charAty一样，不过返回的是字符码位。如果pos小于0或者大于等于字符串长度，则返回NaN。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var name = &apos;Curly&apos;;</span><br><span class=\"line\">var initial = name.charCodeAt(0);</span><br><span class=\"line\">//initial是67</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"string-concat-item…\"><a href=\"#string-concat-item…\" class=\"headerlink\" title=\"string.concat(item…)\"></a>string.concat(item…)</h4><p>链接两个字符串，没什么鸟用。直接用’+‘省时省力。</p>\n<h4 id=\"string-indexOf-searchString-position\"><a href=\"#string-indexOf-searchString-position\" class=\"headerlink\" title=\"string.indexOf(searchString, position)\"></a>string.indexOf(searchString, position)</h4><p>indexOf方法在string内查找另一个字符串searchString。如果被找到，返回第一个匹配字符的位置，否则返回-1。可选参数position可设置从string的某个指定的位置开始查找：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var text = &apos;Mississippi&apos;;</span><br><span class=\"line\">var p = text.indexOf(&apos;ss&apos;)   //p是2</span><br><span class=\"line\">p = text.indexOf(&apos;ss&apos;, 3)    //p是5</span><br><span class=\"line\">p = text.indexOf(&apos;ss&apos;, 6)    //p是-1</span><br></pre></td></tr></table></figure>\n<h4 id=\"string-lastIndexOf-searchString-position\"><a href=\"#string-lastIndexOf-searchString-position\" class=\"headerlink\" title=\"string.lastIndexOf(searchString, position)\"></a>string.lastIndexOf(searchString, position)</h4><p>lastIndexOf方法和indexOf方法类似，只不过是从该字符串的末尾开始查找：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var text = &apos;Mississippi&apos;;</span><br><span class=\"line\">var p = text.lastIndexOf(&apos;ss&apos;)   //p是5</span><br><span class=\"line\">p = text.lastIndexOf(&apos;ss&apos;, 3)    //p是2</span><br><span class=\"line\">p = text.lastIndexOf(&apos;ss&apos;, 6)    //p是5</span><br></pre></td></tr></table></figure>\n<h4 id=\"string-slice-start-end\"><a href=\"#string-slice-start-end\" class=\"headerlink\" title=\"string.slice(start, end)\"></a>string.slice(start, end)</h4><p>slice方法复制string的一部分来构造一个新的字符串。如果start参数是负数，它将与string。length相加。end是可选的，默认值为string.length。如果end参数是负数，那么它将与string.length相加。end参数等于你要取得最后一个字符的位置值加上1.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var text = &apos;and in it he says &quot;Any damn fool could&quot;&apos;;</span><br><span class=\"line\">var a = text.slice(18);</span><br><span class=\"line\">//a为&apos;&quot;Any damn fool could&quot;&apos;</span><br><span class=\"line\">var b = text.slice(0,3);</span><br><span class=\"line\">//b为’and‘</span><br><span class=\"line\">var c = text.slice(-5);</span><br><span class=\"line\">//c为&apos;could&apos;</span><br></pre></td></tr></table></figure>\n<h4 id=\"string-substring-start-end\"><a href=\"#string-substring-start-end\" class=\"headerlink\" title=\"string.substring(start, end)\"></a>string.substring(start, end)</h4><p>与slice方法一样。没有任何理由使用它，直接用slice。</p>\n<h4 id=\"string-toLowerCase-amp-amp-string-toUpperCase\"><a href=\"#string-toLowerCase-amp-amp-string-toUpperCase\" class=\"headerlink\" title=\"string.toLowerCase() &amp;&amp; string.toUpperCase()\"></a>string.toLowerCase() &amp;&amp; string.toUpperCase()</h4><p>没啥可说的，返回一个新的字符串，实现大小写转换</p>\n<h4 id=\"string-split-separator-limit\"><a href=\"#string-split-separator-limit\" class=\"headerlink\" title=\"string.split(separator, limit)\"></a>string.split(separator, limit)</h4><p>split方法把string分割成片段来创建一个字符串数组——字符串转数组。可选参数limit可以限制被分割的片段数量。separator参数可以是一个字符串或一个正则表达式。<br>如果separator是一个空字符，会返回一个单字符的数组：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var digits = &apos;0123456789&apos;;</span><br><span class=\"line\">var a = digits.split(&apos;&apos;,5);</span><br><span class=\"line\">// a 为[&apos;0&apos;,&apos;1&apos;,&apos;2&apos;,&apos;3&apos;,&apos;4&apos;]</span><br></pre></td></tr></table></figure>\n<p>否则，此方法会在string中查找所有separator出现的地方，分隔符两边的两个单元文本会被复制到改数组中。此方法忽略g标识：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var ip = &apos;192.168.1.0&apos;;</span><br><span class=\"line\">var b = ip(&apos;.&apos;);</span><br><span class=\"line\">//b为[&apos;192&apos;,&apos;168&apos;,&apos;1&apos;,&apos;0&apos;]</span><br><span class=\"line\"></span><br><span class=\"line\">var c = &apos;|a|b|c|&apos;.split(&apos;|&apos;);</span><br><span class=\"line\">// c为[&apos;&apos;,&apos;a&apos;,&apos;b&apos;,&apos;c&apos;,&apos;&apos;]</span><br></pre></td></tr></table></figure>\n<p>当sparator时一个正则表达式时，现代浏览器会在输出的数组中排除掉空字符串：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var f = &apos;|a|b|c|&apos;.split(/\\|/);</span><br><span class=\"line\">//f为[&apos;a&apos;,&apos;b&apos;,&apos;c&apos;]</span><br></pre></td></tr></table></figure>\n<hr>\n<p>array和string常用方法就先总结到这里。当然有没列出来的方法，不过工作中很少用。string中有关regExp的方法一律没写，那些还是<del>拖到</del>正则表达式的有关文章里再写吧（围笑。</p>\n<p><em><small>参考书籍：<a href=\"https://book.douban.com/subject/3590768/\" target=\"_blank\" rel=\"noopener\">《JavaScript语言精粹》，JavaScript:The Good Parts，作者: Douglas Crockford </a></small></em></p>\n","site":{"data":{}},"excerpt":"<p>　　总结下js中数组和字符串的常用方法。有几个方法总是记混，没办法，英语差，而且对于返回值和是否改变原数组也一直掌握不牢。</p>\n<h3 id=\"Array\"><a href=\"#Array\" class=\"headerlink\" title=\"Array\"></a>Array</h3><h4 id=\"array-concat-item…\"><a href=\"#array-concat-item…\" class=\"headerlink\" title=\"array.concat(item…)\"></a>array.concat(item…)</h4><p>concant方法产生一个新数组，它包含一份array的浅复制(shallow copy)并把一个或多个参数item附加在其后。如果item是一个数组，那么它的每个元素会被分别添加。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var a = [&apos;a&apos;,&apos;b&apos;,&apos;c&apos;];</span><br><span class=\"line\">var b = [&apos;x&apos;,&apos;y&apos;,&apos;z&apos;];</span><br><span class=\"line\">var c = a.concat(b, true);</span><br><span class=\"line\">//c 变成 [&apos;a&apos;,&apos;b&apos;,&apos;c&apos;,&apos;x&apos;,&apos;y&apos;,&apos;z&apos;,true]</span><br><span class=\"line\">//数组a 和 b不变</span><br></pre></td></tr></table></figure>","more":"<h4 id=\"array-join-separator\"><a href=\"#array-join-separator\" class=\"headerlink\" title=\"array.join(separator)\"></a>array.join(separator)</h4><p>join方法把一个array构造成一个字符串——就是数组转字符串。它先把array中的每个元素构造成一个字符串，接着用一个separator分隔符把它们链接在一起。默认的separator是逗号’,’。要想做到无间隔的链接，可以使用空字符串作为separator。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var a = [&apos;a&apos;,&apos;b&apos;,&apos;c&apos;];</span><br><span class=\"line\">var b = a.join();</span><br><span class=\"line\">var c = a.join(&apos;&apos;);</span><br><span class=\"line\">var d = a.join(&apos;,&apos;);</span><br><span class=\"line\">//b和d都是&apos;a,b,c&apos;</span><br><span class=\"line\">//c是&apos;abc&apos;</span><br><span class=\"line\">//a不变</span><br></pre></td></tr></table></figure>\n<h4 id=\"array-pop\"><a href=\"#array-pop\" class=\"headerlink\" title=\"array.pop()\"></a>array.pop()</h4><p>pop和push方法使得array可以像堆栈(stack)一样工作。pop方法移除array中的最后一个元素并返回改元素。如果array是empty，则返回undefined。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var a = [&apos;a&apos;,&apos;b&apos;,&apos;c&apos;];</span><br><span class=\"line\">var c = a.pop();</span><br><span class=\"line\">//c 是 &apos;c&apos;</span><br><span class=\"line\">//a 变成[&apos;a&apos;,&apos;b&apos;]</span><br></pre></td></tr></table></figure>\n<p>pop可以像这样实现：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Array.method(&apos;pop&apos;, function() &#123;</span><br><span class=\"line\">    return this.splice(this.length - 1, 1)[0];</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"array-push-item…\"><a href=\"#array-push-item…\" class=\"headerlink\" title=\"array.push(item…)\"></a>array.push(item…)</h4><p>push方法把一个或多个参数item附加到一个数组的尾部。和concat方法不同的是，它会修改array，如果参数item是一个数组，它会把参数数组作为单个元素整个添加到数组中，并返回整个array的新长度值。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var a = [&apos;a&apos;,&apos;b&apos;,&apos;c&apos;];</span><br><span class=\"line\">var b = [&apos;x&apos;,&apos;y&apos;,&apos;z&apos;];</span><br><span class=\"line\">var c = a.push(b, true);</span><br><span class=\"line\">//a 变为 [&apos;a&apos;,&apos;b&apos;,&apos;c&apos;,[&apos;x&apos;,&apos;y&apos;,&apos;z&apos;], true]</span><br><span class=\"line\">//b不变，c为5</span><br></pre></td></tr></table></figure>\n<p>push可以像这样实现：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Array.method(&apos;push&apos;, function() &#123;</span><br><span class=\"line\">    this.splice.apply(</span><br><span class=\"line\">        this,</span><br><span class=\"line\">        [this.length, 0].concat(Array.prototype.slice.apply(aruguments));</span><br><span class=\"line\">        return this.length;</span><br><span class=\"line\">    );</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"array-reverse\"><a href=\"#array-reverse\" class=\"headerlink\" title=\"array.reverse()\"></a>array.reverse()</h4><p>reverse方法反转array里的元素的顺序，并返回array本身：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var a = [&apos;a&apos;,&apos;b&apos;,&apos;c&apos;];</span><br><span class=\"line\">var b = a.reverse();</span><br><span class=\"line\">//a和b都是[&apos;c&apos;,&apos;b&apos;,&apos;a&apos;]</span><br></pre></td></tr></table></figure>\n<h4 id=\"array-shift\"><a href=\"#array-shift\" class=\"headerlink\" title=\"array.shift()\"></a>array.shift()</h4><p>shift方法移除数组array中的第一个元素并返回该元素。如果这个数组array是空的，它会返回undefined。shift通常比pop慢的多：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var a = [&apos;a&apos;,&apos;b&apos;,&apos;c&apos;];</span><br><span class=\"line\">var c = a.shift();</span><br><span class=\"line\">//a变为[&apos;b&apos;,&apos;c&apos;]</span><br><span class=\"line\">//c是&apos;a&apos;</span><br></pre></td></tr></table></figure>\n<p>shift可以这样实现：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Array.method(&apos;shift&apos;, function() &#123;</span><br><span class=\"line\">    return this.splice(0, 1)[0];</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"array-unshift-item…\"><a href=\"#array-unshift-item…\" class=\"headerlink\" title=\"array.unshift(item…)\"></a>array.unshift(item…)</h4><p>unshift方法像push方法一样，用于把元素添加到数组中。但它是吧item插入到array的开始。返回array新的length：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var a = [&apos;a&apos;,&apos;b&apos;,&apos;c&apos;];</span><br><span class=\"line\">var r = a.unshift(&apos;?&apos;,&apos;@&apos;);</span><br><span class=\"line\">//a变为[&apos;?&apos;,&apos;@&apos;,&apos;a&apos;,&apos;b&apos;,&apos;c&apos;]</span><br><span class=\"line\">//r为5</span><br></pre></td></tr></table></figure>\n<p>unshift可以这样实现：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Array.method(&apos;unshift&apos;, function () &#123;</span><br><span class=\"line\">    this.splice.apply(</span><br><span class=\"line\">        this,</span><br><span class=\"line\">        [0, 0].concat(Array.prototype.slice.apply(arguments));</span><br><span class=\"line\">        return this.length;</span><br><span class=\"line\">    );</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"array-slice-start-end\"><a href=\"#array-slice-start-end\" class=\"headerlink\" title=\"array.slice(start, end)\"></a>array.slice(start, end)</h4><p>slice方法对array中的一段做浅复制。首先复制array[start],一直复制到array[end]为止。end参数是可选的，默认值为该数组的长度array.length。如果两个参数中的任何一个是负数，array.length会和他们相加，试图让它们成为非负数。如果start大于等于array.length，得到的结果将是一个新的空数组。<br><strong>注意：千万别把slice和splice弄混了。字符串中也有一个同名方法：string.slice()</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var a = [&apos;a&apos;,&apos;b&apos;,&apos;c&apos;];</span><br><span class=\"line\">var b = a.slice(0,1);  //b为[&apos;a&apos;]</span><br><span class=\"line\">var c = a.slice(1);    //c为[&apos;b&apos;,&apos;c&apos;]</span><br><span class=\"line\">var d = a.slice(1,2);  //d为[&apos;b&apos;]</span><br><span class=\"line\">//a不变</span><br></pre></td></tr></table></figure>\n<h4 id=\"array-splice-start-deleteCount-item…\"><a href=\"#array-splice-start-deleteCount-item…\" class=\"headerlink\" title=\"array.splice(start, deleteCount, item…)\"></a>array.splice(start, deleteCount, item…)</h4><p>splice方法从array中移除一个或多个元素，并用新的item替换它们。start是从array中移除元素的开始位置。deleteCount是要移除的元素个数。它返回一个包含被移除元素的数组。<br><strong>splice的最主要用处是从一个数组中删除元素。千万不要和slice弄混了</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var a = [&apos;a&apos;,&apos;b&apos;,&apos;c&apos;];</span><br><span class=\"line\">var r = a.splice(1,1,&apos;ache&apos;,&apos;bug&apos;);</span><br><span class=\"line\">//a变为[&apos;a&apos;,&apos;ache&apos;,&apos;bug&apos;,&apos;c&apos;]</span><br><span class=\"line\">//r为[&apos;b&apos;]</span><br></pre></td></tr></table></figure>\n<h4 id=\"array-sort-comparefn\"><a href=\"#array-sort-comparefn\" class=\"headerlink\" title=\"array.sort(comparefn)\"></a>array.sort(comparefn)</h4><p>sort方法对array中的内容进行排序。这货还是少用为妙。</p>\n<hr>\n<h3 id=\"String\"><a href=\"#String\" class=\"headerlink\" title=\"String\"></a>String</h3><h4 id=\"string-charAt-pos\"><a href=\"#string-charAt-pos\" class=\"headerlink\" title=\"string.charAt(pos)\"></a>string.charAt(pos)</h4><p>charAt方法返回在string中pos位置处的字符。如果pos小于0或者大于等于字符串的长度string.length，则返回空字符串。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var name = &apos;Curly&apos;;</span><br><span class=\"line\">var initial = name.charAt(0);</span><br><span class=\"line\">//initial是&apos;C‘</span><br></pre></td></tr></table></figure>\n<h4 id=\"string-charCodeAt-pos\"><a href=\"#string-charCodeAt-pos\" class=\"headerlink\" title=\"string.charCodeAt(pos)\"></a>string.charCodeAt(pos)</h4><p>与charAty一样，不过返回的是字符码位。如果pos小于0或者大于等于字符串长度，则返回NaN。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var name = &apos;Curly&apos;;</span><br><span class=\"line\">var initial = name.charCodeAt(0);</span><br><span class=\"line\">//initial是67</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"string-concat-item…\"><a href=\"#string-concat-item…\" class=\"headerlink\" title=\"string.concat(item…)\"></a>string.concat(item…)</h4><p>链接两个字符串，没什么鸟用。直接用’+‘省时省力。</p>\n<h4 id=\"string-indexOf-searchString-position\"><a href=\"#string-indexOf-searchString-position\" class=\"headerlink\" title=\"string.indexOf(searchString, position)\"></a>string.indexOf(searchString, position)</h4><p>indexOf方法在string内查找另一个字符串searchString。如果被找到，返回第一个匹配字符的位置，否则返回-1。可选参数position可设置从string的某个指定的位置开始查找：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var text = &apos;Mississippi&apos;;</span><br><span class=\"line\">var p = text.indexOf(&apos;ss&apos;)   //p是2</span><br><span class=\"line\">p = text.indexOf(&apos;ss&apos;, 3)    //p是5</span><br><span class=\"line\">p = text.indexOf(&apos;ss&apos;, 6)    //p是-1</span><br></pre></td></tr></table></figure>\n<h4 id=\"string-lastIndexOf-searchString-position\"><a href=\"#string-lastIndexOf-searchString-position\" class=\"headerlink\" title=\"string.lastIndexOf(searchString, position)\"></a>string.lastIndexOf(searchString, position)</h4><p>lastIndexOf方法和indexOf方法类似，只不过是从该字符串的末尾开始查找：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var text = &apos;Mississippi&apos;;</span><br><span class=\"line\">var p = text.lastIndexOf(&apos;ss&apos;)   //p是5</span><br><span class=\"line\">p = text.lastIndexOf(&apos;ss&apos;, 3)    //p是2</span><br><span class=\"line\">p = text.lastIndexOf(&apos;ss&apos;, 6)    //p是5</span><br></pre></td></tr></table></figure>\n<h4 id=\"string-slice-start-end\"><a href=\"#string-slice-start-end\" class=\"headerlink\" title=\"string.slice(start, end)\"></a>string.slice(start, end)</h4><p>slice方法复制string的一部分来构造一个新的字符串。如果start参数是负数，它将与string。length相加。end是可选的，默认值为string.length。如果end参数是负数，那么它将与string.length相加。end参数等于你要取得最后一个字符的位置值加上1.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var text = &apos;and in it he says &quot;Any damn fool could&quot;&apos;;</span><br><span class=\"line\">var a = text.slice(18);</span><br><span class=\"line\">//a为&apos;&quot;Any damn fool could&quot;&apos;</span><br><span class=\"line\">var b = text.slice(0,3);</span><br><span class=\"line\">//b为’and‘</span><br><span class=\"line\">var c = text.slice(-5);</span><br><span class=\"line\">//c为&apos;could&apos;</span><br></pre></td></tr></table></figure>\n<h4 id=\"string-substring-start-end\"><a href=\"#string-substring-start-end\" class=\"headerlink\" title=\"string.substring(start, end)\"></a>string.substring(start, end)</h4><p>与slice方法一样。没有任何理由使用它，直接用slice。</p>\n<h4 id=\"string-toLowerCase-amp-amp-string-toUpperCase\"><a href=\"#string-toLowerCase-amp-amp-string-toUpperCase\" class=\"headerlink\" title=\"string.toLowerCase() &amp;&amp; string.toUpperCase()\"></a>string.toLowerCase() &amp;&amp; string.toUpperCase()</h4><p>没啥可说的，返回一个新的字符串，实现大小写转换</p>\n<h4 id=\"string-split-separator-limit\"><a href=\"#string-split-separator-limit\" class=\"headerlink\" title=\"string.split(separator, limit)\"></a>string.split(separator, limit)</h4><p>split方法把string分割成片段来创建一个字符串数组——字符串转数组。可选参数limit可以限制被分割的片段数量。separator参数可以是一个字符串或一个正则表达式。<br>如果separator是一个空字符，会返回一个单字符的数组：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var digits = &apos;0123456789&apos;;</span><br><span class=\"line\">var a = digits.split(&apos;&apos;,5);</span><br><span class=\"line\">// a 为[&apos;0&apos;,&apos;1&apos;,&apos;2&apos;,&apos;3&apos;,&apos;4&apos;]</span><br></pre></td></tr></table></figure>\n<p>否则，此方法会在string中查找所有separator出现的地方，分隔符两边的两个单元文本会被复制到改数组中。此方法忽略g标识：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var ip = &apos;192.168.1.0&apos;;</span><br><span class=\"line\">var b = ip(&apos;.&apos;);</span><br><span class=\"line\">//b为[&apos;192&apos;,&apos;168&apos;,&apos;1&apos;,&apos;0&apos;]</span><br><span class=\"line\"></span><br><span class=\"line\">var c = &apos;|a|b|c|&apos;.split(&apos;|&apos;);</span><br><span class=\"line\">// c为[&apos;&apos;,&apos;a&apos;,&apos;b&apos;,&apos;c&apos;,&apos;&apos;]</span><br></pre></td></tr></table></figure>\n<p>当sparator时一个正则表达式时，现代浏览器会在输出的数组中排除掉空字符串：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var f = &apos;|a|b|c|&apos;.split(/\\|/);</span><br><span class=\"line\">//f为[&apos;a&apos;,&apos;b&apos;,&apos;c&apos;]</span><br></pre></td></tr></table></figure>\n<hr>\n<p>array和string常用方法就先总结到这里。当然有没列出来的方法，不过工作中很少用。string中有关regExp的方法一律没写，那些还是<del>拖到</del>正则表达式的有关文章里再写吧（围笑。</p>\n<p><em><small>参考书籍：<a href=\"https://book.douban.com/subject/3590768/\" target=\"_blank\" rel=\"noopener\">《JavaScript语言精粹》，JavaScript:The Good Parts，作者: Douglas Crockford </a></small></em></p>"}],"PostAsset":[{"_id":"source/_posts/howToUseApplyCallBind/bind_support.png","post":"cjxbjwohq0001zwucal8fvv3q","slug":"bind_support.png","modified":1,"renderable":1},{"_id":"source/_posts/数组和字符串对象方法总结/4.jpg","post":"cjxbjwoi60006zwuc778ys8nu","slug":"4.jpg","modified":1,"renderable":1}],"PostCategory":[{"post_id":"cjxbjwoi60006zwuc778ys8nu","category_id":"cjxbjwoi20004zwuc8ce4h4j5","_id":"cjxbjwoia0008zwuc1pzfd4ep"},{"post_id":"cjxbjwohq0001zwucal8fvv3q","category_id":"cjxbjwoi20004zwuc8ce4h4j5","_id":"cjxbjwoib000azwucbia3an4u"},{"post_id":"cjxbjwohv0003zwuckpfih30r","category_id":"cjxbjwoi20004zwuc8ce4h4j5","_id":"cjxbjwoic000bzwuc4de8rtku"},{"post_id":"cjxbjwoi30005zwuctf0ifbnu","category_id":"cjxbjwoi20004zwuc8ce4h4j5","_id":"cjxbjwoid000czwucaj45zrzj"}],"PostTag":[],"Tag":[]}}